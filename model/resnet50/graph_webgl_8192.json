{
  "converted_at": 1545028332,
  "inputs": [
    "Variable1"
  ],
  "outputs": [
    "Variable286"
  ],
  "memory_layout": {
    "static": {
      "size": -1,
      "allocations": {
        "Variable9": {
          "name": "Variable9",
          "offset": -1,
          "size": 200704,
          "width": 16,
          "height": 3136,
          "channel_mode": "RGBA"
        },
        "ConstantVariable984": {
          "name": "ConstantVariable984",
          "offset": -1,
          "size": 65536,
          "width": 128,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1014": {
          "name": "ConstantVariable1014",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "ConstantVariable35": {
          "name": "ConstantVariable35",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable6": {
          "name": "Variable6",
          "offset": -1,
          "size": 802816,
          "width": 8192,
          "height": 98,
          "channel_mode": "R"
        },
        "ConstantVariable996": {
          "name": "ConstantVariable996",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable936": {
          "name": "ConstantVariable936",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable123": {
          "name": "ConstantVariable123",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1008": {
          "name": "ConstantVariable1008",
          "offset": -1,
          "size": 262144,
          "width": 256,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable1374": {
          "name": "Variable1374",
          "offset": -1,
          "size": 401408,
          "width": 8192,
          "height": 49,
          "channel_mode": "R"
        },
        "ConstantVariable75": {
          "name": "ConstantVariable75",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable960": {
          "name": "ConstantVariable960",
          "offset": -1,
          "size": 36864,
          "width": 144,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "ConstantVariable840": {
          "name": "ConstantVariable840",
          "offset": -1,
          "size": 9408,
          "width": 147,
          "height": 64,
          "channel_mode": "R"
        },
        "ConstantVariable493": {
          "name": "ConstantVariable493",
          "offset": -1,
          "size": 2048,
          "width": 2048,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable67": {
          "name": "ConstantVariable67",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1006": {
          "name": "ConstantVariable1006",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "ConstantVariable143": {
          "name": "ConstantVariable143",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable940": {
          "name": "ConstantVariable940",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable958": {
          "name": "ConstantVariable958",
          "offset": -1,
          "size": 36864,
          "width": 144,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "ConstantVariable91": {
          "name": "ConstantVariable91",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable12": {
          "name": "Variable12",
          "offset": -1,
          "size": 200704,
          "width": 8192,
          "height": 25,
          "channel_mode": "R"
        },
        "ConstantVariable974": {
          "name": "ConstantVariable974",
          "offset": -1,
          "size": 16384,
          "width": 64,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "ConstantVariable167": {
          "name": "ConstantVariable167",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1185": {
          "name": "Variable1185",
          "offset": -1,
          "size": 802816,
          "width": 8192,
          "height": 98,
          "channel_mode": "R"
        },
        "ConstantVariable179": {
          "name": "ConstantVariable179",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1214": {
          "name": "Variable1214",
          "offset": -1,
          "size": 1806336,
          "width": 144,
          "height": 3136,
          "channel_mode": "RGBA"
        },
        "ConstantVariable968": {
          "name": "ConstantVariable968",
          "offset": -1,
          "size": 16384,
          "width": 16,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable171": {
          "name": "ConstantVariable171",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable86": {
          "name": "Variable86",
          "offset": -1,
          "size": 100352,
          "width": 8192,
          "height": 13,
          "channel_mode": "R"
        },
        "ConstantVariable127": {
          "name": "ConstantVariable127",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable80": {
          "name": "Variable80",
          "offset": -1,
          "size": 401408,
          "width": 8192,
          "height": 49,
          "channel_mode": "R"
        },
        "ConstantVariable151": {
          "name": "ConstantVariable151",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable139": {
          "name": "ConstantVariable139",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable978": {
          "name": "ConstantVariable978",
          "offset": -1,
          "size": 32768,
          "width": 64,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable1368": {
          "name": "Variable1368",
          "offset": -1,
          "size": 1000,
          "width": 1000,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1018": {
          "name": "ConstantVariable1018",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "Variable1372": {
          "name": "Variable1372",
          "offset": -1,
          "size": 921984,
          "width": 147,
          "height": 6272,
          "channel_mode": "R"
        },
        "Variable1366": {
          "name": "Variable1366",
          "offset": -1,
          "size": 1,
          "width": 1,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1365": {
          "name": "Variable1365",
          "offset": -1,
          "size": 1,
          "width": 1,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable950": {
          "name": "ConstantVariable950",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable147": {
          "name": "ConstantVariable147",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1020": {
          "name": "ConstantVariable1020",
          "offset": -1,
          "size": 524288,
          "width": 256,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable31": {
          "name": "ConstantVariable31",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable285": {
          "name": "Variable285",
          "offset": -1,
          "size": 1000,
          "width": 1000,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1371": {
          "name": "Variable1371",
          "offset": -1,
          "size": 921984,
          "width": 147,
          "height": 6272,
          "channel_mode": "R"
        },
        "Variable284": {
          "name": "Variable284",
          "offset": -1,
          "size": 1000,
          "width": 1000,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable283": {
          "name": "Variable283",
          "offset": -1,
          "size": 2048,
          "width": 512,
          "height": 1,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1010": {
          "name": "ConstantVariable1010",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "Variable1557": {
          "name": "Variable1557",
          "offset": -1,
          "size": 2048,
          "width": 2048,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable998": {
          "name": "ConstantVariable998",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "Variable282": {
          "name": "Variable282",
          "offset": -1,
          "size": 2048,
          "width": 2048,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable27": {
          "name": "ConstantVariable27",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable99": {
          "name": "ConstantVariable99",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable992": {
          "name": "ConstantVariable992",
          "offset": -1,
          "size": 65536,
          "width": 32,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable841": {
          "name": "ConstantVariable841",
          "offset": -1,
          "size": 9408,
          "width": 147,
          "height": 64,
          "channel_mode": "R"
        },
        "ConstantVariable95": {
          "name": "ConstantVariable95",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable155": {
          "name": "ConstantVariable155",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1": {
          "name": "Variable1",
          "offset": -1,
          "size": 150528,
          "width": 8192,
          "height": 19,
          "channel_mode": "R"
        },
        "Variable275": {
          "name": "Variable275",
          "offset": -1,
          "size": 25088,
          "width": 128,
          "height": 49,
          "channel_mode": "RGBA"
        },
        "ConstantVariable495": {
          "name": "ConstantVariable495",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable11": {
          "name": "ConstantVariable11",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable938": {
          "name": "ConstantVariable938",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable39": {
          "name": "ConstantVariable39",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable823": {
          "name": "ConstantVariable823",
          "offset": -1,
          "size": 2048000,
          "width": 512,
          "height": 1000,
          "channel_mode": "RGBA"
        },
        "Variable1359": {
          "name": "Variable1359",
          "offset": -1,
          "size": 225792,
          "width": 1152,
          "height": 49,
          "channel_mode": "RGBA"
        },
        "ConstantVariable964": {
          "name": "ConstantVariable964",
          "offset": -1,
          "size": 36864,
          "width": 144,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "ConstantVariable55": {
          "name": "ConstantVariable55",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable107": {
          "name": "ConstantVariable107",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable962": {
          "name": "ConstantVariable962",
          "offset": -1,
          "size": 4096,
          "width": 16,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "ConstantVariable976": {
          "name": "ConstantVariable976",
          "offset": -1,
          "size": 16384,
          "width": 16,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1032": {
          "name": "ConstantVariable1032",
          "offset": -1,
          "size": 1048576,
          "width": 128,
          "height": 2048,
          "channel_mode": "RGBA"
        },
        "ConstantVariable79": {
          "name": "ConstantVariable79",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1022": {
          "name": "ConstantVariable1022",
          "offset": -1,
          "size": 2359296,
          "width": 1152,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable980": {
          "name": "ConstantVariable980",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable972": {
          "name": "ConstantVariable972",
          "offset": -1,
          "size": 16384,
          "width": 16,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable501": {
          "name": "ConstantVariable501",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable499": {
          "name": "ConstantVariable499",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable47": {
          "name": "ConstantVariable47",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable932": {
          "name": "ConstantVariable932",
          "offset": -1,
          "size": 2359296,
          "width": 1152,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable944": {
          "name": "ConstantVariable944",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable982": {
          "name": "ConstantVariable982",
          "offset": -1,
          "size": 65536,
          "width": 32,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "Variable718": {
          "name": "Variable718",
          "offset": -1,
          "size": 802816,
          "width": 8192,
          "height": 98,
          "channel_mode": "R"
        },
        "ConstantVariable15": {
          "name": "ConstantVariable15",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable954": {
          "name": "ConstantVariable954",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable970": {
          "name": "ConstantVariable970",
          "offset": -1,
          "size": 16384,
          "width": 64,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "ConstantVariable942": {
          "name": "ConstantVariable942",
          "offset": -1,
          "size": 589824,
          "width": 576,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable1487": {
          "name": "Variable1487",
          "offset": -1,
          "size": 200704,
          "width": 8192,
          "height": 25,
          "channel_mode": "R"
        },
        "ConstantVariable71": {
          "name": "ConstantVariable71",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable986": {
          "name": "ConstantVariable986",
          "offset": -1,
          "size": 65536,
          "width": 32,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable199": {
          "name": "ConstantVariable199",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable956": {
          "name": "ConstantVariable956",
          "offset": -1,
          "size": 131072,
          "width": 64,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable990": {
          "name": "ConstantVariable990",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable217": {
          "name": "ConstantVariable217",
          "offset": -1,
          "size": 1000,
          "width": 1000,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable966": {
          "name": "ConstantVariable966",
          "offset": -1,
          "size": 16384,
          "width": 16,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1016": {
          "name": "ConstantVariable1016",
          "offset": -1,
          "size": 262144,
          "width": 256,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1002": {
          "name": "ConstantVariable1002",
          "offset": -1,
          "size": 262144,
          "width": 64,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "ConstantVariable163": {
          "name": "ConstantVariable163",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable51": {
          "name": "ConstantVariable51",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1373": {
          "name": "Variable1373",
          "offset": -1,
          "size": 401408,
          "width": 8192,
          "height": 49,
          "channel_mode": "R"
        },
        "ConstantVariable1004": {
          "name": "ConstantVariable1004",
          "offset": -1,
          "size": 262144,
          "width": 256,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable730": {
          "name": "Variable730",
          "offset": -1,
          "size": 401408,
          "width": 8192,
          "height": 49,
          "channel_mode": "R"
        },
        "Variable254": {
          "name": "Variable254",
          "offset": -1,
          "size": 25088,
          "width": 8192,
          "height": 4,
          "channel_mode": "R"
        },
        "ConstantVariable946": {
          "name": "ConstantVariable946",
          "offset": -1,
          "size": 524288,
          "width": 128,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "ConstantVariable135": {
          "name": "ConstantVariable135",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable131": {
          "name": "ConstantVariable131",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1030": {
          "name": "ConstantVariable1030",
          "offset": -1,
          "size": 1048576,
          "width": 512,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "Variable249": {
          "name": "Variable249",
          "offset": -1,
          "size": 100352,
          "width": 512,
          "height": 49,
          "channel_mode": "RGBA"
        },
        "ConstantVariable119": {
          "name": "ConstantVariable119",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable175": {
          "name": "ConstantVariable175",
          "offset": -1,
          "size": 1024,
          "width": 1024,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable43": {
          "name": "ConstantVariable43",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable1026": {
          "name": "ConstantVariable1026",
          "offset": -1,
          "size": 1048576,
          "width": 512,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "Variable60": {
          "name": "Variable60",
          "offset": -1,
          "size": 802816,
          "width": 8192,
          "height": 98,
          "channel_mode": "R"
        },
        "Variable34": {
          "name": "Variable34",
          "offset": -1,
          "size": 200704,
          "width": 8192,
          "height": 25,
          "channel_mode": "R"
        },
        "ConstantVariable1024": {
          "name": "ConstantVariable1024",
          "offset": -1,
          "size": 1048576,
          "width": 128,
          "height": 2048,
          "channel_mode": "RGBA"
        },
        "ConstantVariable203": {
          "name": "ConstantVariable203",
          "offset": -1,
          "size": 2048,
          "width": 2048,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable215": {
          "name": "ConstantVariable215",
          "offset": -1,
          "size": 2048,
          "width": 2048,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable234": {
          "name": "Variable234",
          "offset": -1,
          "size": 25088,
          "width": 8192,
          "height": 4,
          "channel_mode": "R"
        },
        "ConstantVariable207": {
          "name": "ConstantVariable207",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable233": {
          "name": "Variable233",
          "offset": -1,
          "size": 25088,
          "width": 8192,
          "height": 4,
          "channel_mode": "R"
        },
        "ConstantVariable1028": {
          "name": "ConstantVariable1028",
          "offset": -1,
          "size": 1048576,
          "width": 128,
          "height": 2048,
          "channel_mode": "RGBA"
        },
        "Variable232": {
          "name": "Variable232",
          "offset": -1,
          "size": 25088,
          "width": 8192,
          "height": 4,
          "channel_mode": "R"
        },
        "ConstantVariable1012": {
          "name": "ConstantVariable1012",
          "offset": -1,
          "size": 262144,
          "width": 256,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable1342": {
          "name": "Variable1342",
          "offset": -1,
          "size": 50176,
          "width": 256,
          "height": 49,
          "channel_mode": "RGBA"
        },
        "ConstantVariable83": {
          "name": "ConstantVariable83",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable154": {
          "name": "Variable154",
          "offset": -1,
          "size": 50176,
          "width": 8192,
          "height": 7,
          "channel_mode": "R"
        },
        "ConstantVariable87": {
          "name": "ConstantVariable87",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable149": {
          "name": "Variable149",
          "offset": -1,
          "size": 200704,
          "width": 256,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "ConstantVariable930": {
          "name": "ConstantVariable930",
          "offset": -1,
          "size": 2359296,
          "width": 1152,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "ConstantVariable183": {
          "name": "ConstantVariable183",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable65": {
          "name": "Variable65",
          "offset": -1,
          "size": 100352,
          "width": 8192,
          "height": 13,
          "channel_mode": "R"
        },
        "ConstantVariable497": {
          "name": "ConstantVariable497",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1270": {
          "name": "Variable1270",
          "offset": -1,
          "size": 451584,
          "width": 576,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "ConstantVariable952": {
          "name": "ConstantVariable952",
          "offset": -1,
          "size": 65536,
          "width": 128,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable134": {
          "name": "Variable134",
          "offset": -1,
          "size": 50176,
          "width": 8192,
          "height": 7,
          "channel_mode": "R"
        },
        "Variable132": {
          "name": "Variable132",
          "offset": -1,
          "size": 50176,
          "width": 8192,
          "height": 7,
          "channel_mode": "R"
        },
        "Variable71": {
          "name": "Variable71",
          "offset": -1,
          "size": 100352,
          "width": 32,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "Variable740": {
          "name": "Variable740",
          "offset": -1,
          "size": 200704,
          "width": 8192,
          "height": 25,
          "channel_mode": "R"
        },
        "Variable133": {
          "name": "Variable133",
          "offset": -1,
          "size": 50176,
          "width": 8192,
          "height": 7,
          "channel_mode": "R"
        },
        "ConstantVariable934": {
          "name": "ConstantVariable934",
          "offset": -1,
          "size": 2097152,
          "width": 256,
          "height": 2048,
          "channel_mode": "RGBA"
        },
        "ConstantVariable159": {
          "name": "ConstantVariable159",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1277": {
          "name": "Variable1277",
          "offset": -1,
          "size": 100352,
          "width": 128,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "ConstantVariable988": {
          "name": "ConstantVariable988",
          "offset": -1,
          "size": 65536,
          "width": 128,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable195": {
          "name": "ConstantVariable195",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable948": {
          "name": "ConstantVariable948",
          "offset": -1,
          "size": 65536,
          "width": 32,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "Variable139": {
          "name": "Variable139",
          "offset": -1,
          "size": 50176,
          "width": 64,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "ConstantVariable103": {
          "name": "ConstantVariable103",
          "offset": -1,
          "size": 256,
          "width": 256,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable64": {
          "name": "Variable64",
          "offset": -1,
          "size": 100352,
          "width": 8192,
          "height": 13,
          "channel_mode": "R"
        },
        "Variable19": {
          "name": "Variable19",
          "offset": -1,
          "size": 200704,
          "width": 16,
          "height": 3136,
          "channel_mode": "RGBA"
        },
        "Variable14": {
          "name": "Variable14",
          "offset": -1,
          "size": 200704,
          "width": 8192,
          "height": 25,
          "channel_mode": "R"
        },
        "Variable118": {
          "name": "Variable118",
          "offset": -1,
          "size": 100352,
          "width": 8192,
          "height": 13,
          "channel_mode": "R"
        },
        "ConstantVariable994": {
          "name": "ConstantVariable994",
          "offset": -1,
          "size": 131072,
          "width": 128,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable113": {
          "name": "Variable113",
          "offset": -1,
          "size": 401408,
          "width": 128,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "Variable112": {
          "name": "Variable112",
          "offset": -1,
          "size": 401408,
          "width": 8192,
          "height": 49,
          "channel_mode": "R"
        },
        "Variable29": {
          "name": "Variable29",
          "offset": -1,
          "size": 802816,
          "width": 64,
          "height": 3136,
          "channel_mode": "RGBA"
        },
        "Variable66": {
          "name": "Variable66",
          "offset": -1,
          "size": 100352,
          "width": 8192,
          "height": 13,
          "channel_mode": "R"
        },
        "Variable107": {
          "name": "Variable107",
          "offset": -1,
          "size": 100352,
          "width": 32,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "ConstantVariable1000": {
          "name": "ConstantVariable1000",
          "offset": -1,
          "size": 262144,
          "width": 256,
          "height": 256,
          "channel_mode": "RGBA"
        },
        "Variable186": {
          "name": "Variable186",
          "offset": -1,
          "size": 50176,
          "width": 8192,
          "height": 7,
          "channel_mode": "R"
        },
        "Variable1225": {
          "name": "Variable1225",
          "offset": -1,
          "size": 903168,
          "width": 288,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "Variable181": {
          "name": "Variable181",
          "offset": -1,
          "size": 200704,
          "width": 256,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "Variable175": {
          "name": "Variable175",
          "offset": -1,
          "size": 50176,
          "width": 64,
          "height": 196,
          "channel_mode": "RGBA"
        },
        "ConstantVariable6": {
          "name": "ConstantVariable6",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1232": {
          "name": "Variable1232",
          "offset": -1,
          "size": 200704,
          "width": 64,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "Variable1249": {
          "name": "Variable1249",
          "offset": -1,
          "size": 903168,
          "width": 288,
          "height": 784,
          "channel_mode": "RGBA"
        },
        "ConstantVariable211": {
          "name": "ConstantVariable211",
          "offset": -1,
          "size": 512,
          "width": 512,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1294": {
          "name": "Variable1294",
          "offset": -1,
          "size": 451584,
          "width": 576,
          "height": 196,
          "channel_mode": "RGBA"
        }
      }
    },
    "dynamic": {
      "size": -1,
      "allocations": {}
    },
    "mapping": {
      "Variable1": "Variable1",
      "Variable1371": "Variable1371",
      "Variable1372": "Variable1372",
      "Variable1374": "Variable1374",
      "Variable1373": "Variable1373",
      "Variable1185": "Variable1185",
      "Variable718": "Variable718",
      "Variable6": "Variable6",
      "Variable7": "Variable1185",
      "Variable1487": "Variable1487",
      "Variable9": "Variable9",
      "Variable12": "Variable12",
      "Variable13": "Variable1487",
      "Variable14": "Variable14",
      "Variable1191": "Variable1214",
      "Variable17": "Variable1487",
      "Variable18": "Variable12",
      "Variable1489": "Variable14",
      "Variable19": "Variable19",
      "Variable26": "Variable1185",
      "Variable24": "Variable718",
      "Variable726": "Variable6",
      "Variable28": "Variable60",
      "Variable1495": "Variable1185",
      "Variable29": "Variable29",
      "Variable32": "Variable1487",
      "Variable33": "Variable12",
      "Variable34": "Variable34",
      "Variable1204": "Variable1214",
      "Variable37": "Variable1487",
      "Variable38": "Variable12",
      "Variable1493": "Variable14",
      "Variable39": "Variable19",
      "Variable42": "Variable718",
      "Variable728": "Variable6",
      "Variable44": "Variable60",
      "Variable1500": "Variable1185",
      "Variable45": "Variable29",
      "Variable48": "Variable1487",
      "Variable49": "Variable12",
      "Variable50": "Variable34",
      "Variable1214": "Variable1214",
      "Variable53": "Variable1487",
      "Variable54": "Variable12",
      "Variable1498": "Variable14",
      "Variable55": "Variable9",
      "Variable58": "Variable718",
      "Variable729": "Variable6",
      "Variable60": "Variable60",
      "Variable61": "Variable1185",
      "Variable1232": "Variable1232",
      "Variable64": "Variable64",
      "Variable65": "Variable65",
      "Variable66": "Variable66",
      "Variable1225": "Variable1225",
      "Variable69": "Variable64",
      "Variable70": "Variable65",
      "Variable1501": "Variable66",
      "Variable71": "Variable71",
      "Variable78": "Variable1374",
      "Variable76": "Variable1373",
      "Variable730": "Variable730",
      "Variable80": "Variable80",
      "Variable1507": "Variable1373",
      "Variable81": "Variable113",
      "Variable84": "Variable64",
      "Variable85": "Variable65",
      "Variable86": "Variable86",
      "Variable1239": "Variable1225",
      "Variable89": "Variable64",
      "Variable90": "Variable65",
      "Variable1505": "Variable66",
      "Variable91": "Variable71",
      "Variable94": "Variable1374",
      "Variable732": "Variable730",
      "Variable96": "Variable80",
      "Variable1512": "Variable1373",
      "Variable97": "Variable113",
      "Variable100": "Variable64",
      "Variable101": "Variable65",
      "Variable102": "Variable86",
      "Variable1249": "Variable1249",
      "Variable105": "Variable64",
      "Variable106": "Variable65",
      "Variable1510": "Variable66",
      "Variable107": "Variable107",
      "Variable110": "Variable1374",
      "Variable733": "Variable730",
      "Variable112": "Variable112",
      "Variable1517": "Variable1373",
      "Variable113": "Variable113",
      "Variable116": "Variable64",
      "Variable117": "Variable65",
      "Variable118": "Variable118",
      "Variable1259": "Variable1225",
      "Variable121": "Variable64",
      "Variable122": "Variable65",
      "Variable1515": "Variable66",
      "Variable123": "Variable71",
      "Variable126": "Variable1374",
      "Variable734": "Variable730",
      "Variable128": "Variable80",
      "Variable129": "Variable1373",
      "Variable1277": "Variable1277",
      "Variable132": "Variable132",
      "Variable133": "Variable133",
      "Variable134": "Variable134",
      "Variable1270": "Variable1270",
      "Variable137": "Variable132",
      "Variable138": "Variable133",
      "Variable1518": "Variable134",
      "Variable139": "Variable139",
      "Variable146": "Variable12",
      "Variable144": "Variable1487",
      "Variable735": "Variable740",
      "Variable148": "Variable14",
      "Variable1524": "Variable1487",
      "Variable149": "Variable149",
      "Variable152": "Variable132",
      "Variable153": "Variable133",
      "Variable154": "Variable154",
      "Variable1284": "Variable1270",
      "Variable157": "Variable132",
      "Variable158": "Variable133",
      "Variable1522": "Variable134",
      "Variable159": "Variable139",
      "Variable162": "Variable12",
      "Variable737": "Variable34",
      "Variable164": "Variable14",
      "Variable1529": "Variable1487",
      "Variable165": "Variable149",
      "Variable168": "Variable132",
      "Variable169": "Variable133",
      "Variable170": "Variable154",
      "Variable1294": "Variable1294",
      "Variable173": "Variable132",
      "Variable174": "Variable133",
      "Variable1527": "Variable134",
      "Variable175": "Variable175",
      "Variable178": "Variable12",
      "Variable738": "Variable740",
      "Variable180": "Variable14",
      "Variable1534": "Variable1487",
      "Variable181": "Variable181",
      "Variable184": "Variable132",
      "Variable185": "Variable133",
      "Variable186": "Variable186",
      "Variable1304": "Variable1270",
      "Variable189": "Variable132",
      "Variable190": "Variable133",
      "Variable1532": "Variable134",
      "Variable191": "Variable139",
      "Variable194": "Variable12",
      "Variable739": "Variable34",
      "Variable196": "Variable14",
      "Variable1539": "Variable1487",
      "Variable197": "Variable149",
      "Variable200": "Variable132",
      "Variable201": "Variable133",
      "Variable202": "Variable154",
      "Variable1314": "Variable1294",
      "Variable205": "Variable132",
      "Variable206": "Variable133",
      "Variable1537": "Variable134",
      "Variable207": "Variable175",
      "Variable210": "Variable12",
      "Variable740": "Variable740",
      "Variable212": "Variable14",
      "Variable1544": "Variable1487",
      "Variable213": "Variable181",
      "Variable216": "Variable132",
      "Variable217": "Variable133",
      "Variable218": "Variable186",
      "Variable1324": "Variable1270",
      "Variable221": "Variable132",
      "Variable222": "Variable133",
      "Variable1542": "Variable134",
      "Variable223": "Variable139",
      "Variable226": "Variable12",
      "Variable741": "Variable34",
      "Variable228": "Variable14",
      "Variable229": "Variable1487",
      "Variable1342": "Variable1342",
      "Variable232": "Variable232",
      "Variable233": "Variable233",
      "Variable234": "Variable234",
      "Variable1335": "Variable1359",
      "Variable237": "Variable232",
      "Variable238": "Variable233",
      "Variable1545": "Variable234",
      "Variable239": "Variable275",
      "Variable246": "Variable65",
      "Variable244": "Variable64",
      "Variable742": "Variable86",
      "Variable248": "Variable66",
      "Variable1551": "Variable64",
      "Variable249": "Variable249",
      "Variable252": "Variable232",
      "Variable253": "Variable233",
      "Variable254": "Variable254",
      "Variable1349": "Variable1359",
      "Variable257": "Variable232",
      "Variable258": "Variable233",
      "Variable1549": "Variable234",
      "Variable259": "Variable275",
      "Variable262": "Variable65",
      "Variable744": "Variable118",
      "Variable264": "Variable66",
      "Variable1556": "Variable64",
      "Variable265": "Variable249",
      "Variable268": "Variable232",
      "Variable269": "Variable233",
      "Variable270": "Variable254",
      "Variable1359": "Variable1359",
      "Variable273": "Variable232",
      "Variable274": "Variable233",
      "Variable1554": "Variable234",
      "Variable275": "Variable275",
      "Variable278": "Variable65",
      "Variable745": "Variable86",
      "Variable280": "Variable66",
      "Variable281": "Variable64",
      "Variable282": "Variable282",
      "Variable1557": "Variable1557",
      "Variable283": "Variable283",
      "Variable284": "Variable284",
      "Variable285": "Variable285",
      "Variable1365": "Variable1365",
      "Variable1366": "Variable1366",
      "Variable1367": "Variable284",
      "Variable1368": "Variable1368",
      "Variable1369": "Variable1365",
      "Variable286": "Variable284",
      "ConstantVariable840": "ConstantVariable840",
      "ConstantVariable841": "ConstantVariable841",
      "ConstantVariable6": "ConstantVariable6",
      "ConstantVariable501": "ConstantVariable501",
      "ConstantVariable962": "ConstantVariable962",
      "ConstantVariable11": "ConstantVariable11",
      "ConstantVariable964": "ConstantVariable964",
      "ConstantVariable15": "ConstantVariable15",
      "ConstantVariable966": "ConstantVariable966",
      "ConstantVariable968": "ConstantVariable968",
      "ConstantVariable499": "ConstantVariable499",
      "ConstantVariable970": "ConstantVariable970",
      "ConstantVariable27": "ConstantVariable27",
      "ConstantVariable960": "ConstantVariable960",
      "ConstantVariable31": "ConstantVariable31",
      "ConstantVariable972": "ConstantVariable972",
      "ConstantVariable35": "ConstantVariable35",
      "ConstantVariable974": "ConstantVariable974",
      "ConstantVariable39": "ConstantVariable39",
      "ConstantVariable958": "ConstantVariable958",
      "ConstantVariable43": "ConstantVariable43",
      "ConstantVariable976": "ConstantVariable976",
      "ConstantVariable47": "ConstantVariable47",
      "ConstantVariable978": "ConstantVariable978",
      "ConstantVariable51": "ConstantVariable51",
      "ConstantVariable980": "ConstantVariable980",
      "ConstantVariable55": "ConstantVariable55",
      "ConstantVariable982": "ConstantVariable982",
      "ConstantVariable956": "ConstantVariable956",
      "ConstantVariable497": "ConstantVariable497",
      "ConstantVariable984": "ConstantVariable984",
      "ConstantVariable67": "ConstantVariable67",
      "ConstantVariable954": "ConstantVariable954",
      "ConstantVariable71": "ConstantVariable71",
      "ConstantVariable986": "ConstantVariable986",
      "ConstantVariable75": "ConstantVariable75",
      "ConstantVariable988": "ConstantVariable988",
      "ConstantVariable79": "ConstantVariable79",
      "ConstantVariable990": "ConstantVariable990",
      "ConstantVariable83": "ConstantVariable83",
      "ConstantVariable992": "ConstantVariable992",
      "ConstantVariable87": "ConstantVariable87",
      "ConstantVariable952": "ConstantVariable952",
      "ConstantVariable91": "ConstantVariable91",
      "ConstantVariable950": "ConstantVariable950",
      "ConstantVariable95": "ConstantVariable95",
      "ConstantVariable948": "ConstantVariable948",
      "ConstantVariable99": "ConstantVariable99",
      "ConstantVariable994": "ConstantVariable994",
      "ConstantVariable103": "ConstantVariable103",
      "ConstantVariable996": "ConstantVariable996",
      "ConstantVariable107": "ConstantVariable107",
      "ConstantVariable998": "ConstantVariable998",
      "ConstantVariable946": "ConstantVariable946",
      "ConstantVariable495": "ConstantVariable495",
      "ConstantVariable1000": "ConstantVariable1000",
      "ConstantVariable119": "ConstantVariable119",
      "ConstantVariable944": "ConstantVariable944",
      "ConstantVariable123": "ConstantVariable123",
      "ConstantVariable1002": "ConstantVariable1002",
      "ConstantVariable127": "ConstantVariable127",
      "ConstantVariable1004": "ConstantVariable1004",
      "ConstantVariable131": "ConstantVariable131",
      "ConstantVariable942": "ConstantVariable942",
      "ConstantVariable135": "ConstantVariable135",
      "ConstantVariable1006": "ConstantVariable1006",
      "ConstantVariable139": "ConstantVariable139",
      "ConstantVariable1008": "ConstantVariable1008",
      "ConstantVariable143": "ConstantVariable143",
      "ConstantVariable940": "ConstantVariable940",
      "ConstantVariable147": "ConstantVariable147",
      "ConstantVariable1010": "ConstantVariable1010",
      "ConstantVariable151": "ConstantVariable151",
      "ConstantVariable1012": "ConstantVariable1012",
      "ConstantVariable155": "ConstantVariable155",
      "ConstantVariable938": "ConstantVariable938",
      "ConstantVariable159": "ConstantVariable159",
      "ConstantVariable1014": "ConstantVariable1014",
      "ConstantVariable163": "ConstantVariable163",
      "ConstantVariable1016": "ConstantVariable1016",
      "ConstantVariable167": "ConstantVariable167",
      "ConstantVariable936": "ConstantVariable936",
      "ConstantVariable171": "ConstantVariable171",
      "ConstantVariable1018": "ConstantVariable1018",
      "ConstantVariable175": "ConstantVariable175",
      "ConstantVariable1020": "ConstantVariable1020",
      "ConstantVariable179": "ConstantVariable179",
      "ConstantVariable1022": "ConstantVariable1022",
      "ConstantVariable183": "ConstantVariable183",
      "ConstantVariable1024": "ConstantVariable1024",
      "ConstantVariable934": "ConstantVariable934",
      "ConstantVariable493": "ConstantVariable493",
      "ConstantVariable1026": "ConstantVariable1026",
      "ConstantVariable195": "ConstantVariable195",
      "ConstantVariable932": "ConstantVariable932",
      "ConstantVariable199": "ConstantVariable199",
      "ConstantVariable1028": "ConstantVariable1028",
      "ConstantVariable203": "ConstantVariable203",
      "ConstantVariable1030": "ConstantVariable1030",
      "ConstantVariable207": "ConstantVariable207",
      "ConstantVariable930": "ConstantVariable930",
      "ConstantVariable211": "ConstantVariable211",
      "ConstantVariable1032": "ConstantVariable1032",
      "ConstantVariable215": "ConstantVariable215",
      "ConstantVariable823": "ConstantVariable823",
      "ConstantVariable217": "ConstantVariable217"
    }
  },
  "weight_encoding": "raw",
  "placeholders": [],
  "shader_sources": {
    "PartialIm2Col_R_dafb28ba7bedfb27a3247325a76e79d4e30fcad309c6a620934addc8": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(147,1);\nconst ivec4 v1 = ivec4(921984,16464,147,1);\nconst ivec4 v2 = ivec4(1,56,112,147);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(150528,672,3,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,19);\nconst vec2 v7 = vec2(0.0001220703125,0.05263157894736842);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    variable_position_col[1] += 0;\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 3 / 7;\n    int kw = khkwc1 / 3 - kh * 7;\n    int c1 = khkwc1 - (kh * 7 + kw) * 3;\n\n    int h1 = h2 * 2 - 3 + kh * 1;\n    int w1 = w2 * 2 - 3 + kw * 1;\n\n    if (h1 < 0 || h1 >= 224 || w1 < 0 || w1 >= 224) {\n        gl_FragColor.r = 0.0;\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n    }\n}\n",
    "PartialIm2Col_R_0a1011595409fff03ff3f93e0f50d7f243a6a88f846d44c7512015f6": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(147,1);\nconst ivec4 v1 = ivec4(921984,16464,147,1);\nconst ivec4 v2 = ivec4(1,56,112,147);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(150528,672,3,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,19);\nconst vec2 v7 = vec2(0.0001220703125,0.05263157894736842);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    variable_position_col[1] += 56;\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 3 / 7;\n    int kw = khkwc1 / 3 - kh * 7;\n    int c1 = khkwc1 - (kh * 7 + kw) * 3;\n\n    int h1 = h2 * 2 - 3 + kh * 1;\n    int w1 = w2 * 2 - 3 + kw * 1;\n\n    if (h1 < 0 || h1 >= 224 || w1 < 0 || w1 >= 224) {\n        gl_FragColor.r = 0.0;\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n    }\n}\n",
    "Tensordot_R_aafe262f0a8a2ebbe58812bb62f942767fd8e753c592f7e18c66171b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(64,1);\nconst ivec2 v2 = ivec2(6272,64);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.006802721088435374,0.00015943877551020407);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.006802721088435374,0.015625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 147; k++) {\n        float v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4).r;\n        float v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6).r;\n\n        v += v_a * v_b;\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Concat_30eabac47f4909c9a3fc5e928f72f429ff86741f3fd1d5620efda7e3": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(802816,7168,64,1);\nconst ivec4 v2 = ivec4(1,112,112,64);\nconst ivec2 v3 = ivec2(8192,1);\nconst ivec4 v4 = ivec4(802816,7168,64,1);\nconst ivec4 v5 = ivec4(1,112,112,64);\nuniform sampler2D v6;\nconst ivec4 v7 = ivec4(401408,7168,64,1);\nconst ivec2 v8 = ivec2(1,8192);\nconst ivec2 v9 = ivec2(8192,49);\nconst vec2 v10 = vec2(0.0001220703125,0.02040816326530612);\nuniform sampler2D v11;\nconst ivec4 v12 = ivec4(401408,7168,64,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,49);\nconst vec2 v15 = vec2(0.0001220703125,0.02040816326530612);\n\nvoid main() {\nivec4 variable_position_x0 = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\nivec4 variable_position_x1 = ((convert_position_fast(gl_FragCoord.yx,v3, v4, v5, 0)));\n    variable_position_x1[1] -= 56;\n\n    gl_FragColor.r = (\n        (variable_position_x0[1] >= 56)\n        ? texture2D(v6,((vec2((convert_position_fast(variable_position_x1,v7, v8, v9, 0))) + 0.5) * v10))\n        : texture2D(v11,((vec2((convert_position_fast(variable_position_x0,v12, v13, v14, 0))) + 0.5) * v15))\n    ).r;\n}\n",
    "ElementwiseMul_d69c354d6e6c1951a0a20f931f84c688e0a4f69f0fa9e0f4d6720393": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(64,1,1,1);\nconst ivec4 v2 = ivec4(12544,64,1,1);\nconst ivec4 v3 = ivec4(1,64,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,64);\nconst ivec2 v7 = ivec2(64,1);\nconst vec2 v8 = vec2(0.015625,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(64,1,1,1);\nconst ivec2 v11 = ivec2(1,8192);\nconst ivec2 v12 = ivec2(8192,98);\nconst vec2 v13 = vec2(0.0001220703125,0.01020408163265306);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 * x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_2bc04e710409ce908a7877e92a31b508ed9507e36c9a6af70926ea3b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(64,1,1,1);\nconst ivec4 v2 = ivec4(12544,64,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(64,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,98);\nconst vec2 v7 = vec2(0.0001220703125,0.01020408163265306);\nconst ivec4 v8 = ivec4(1,64,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,64);\nconst ivec2 v12 = ivec2(64,1);\nconst vec2 v13 = vec2(0.015625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_22575c2a096342ebbf6ffb700203eb438f7e9870eaa1a916b936e69b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,98.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "MaxPooling2D_49ba9086238c875f9b04a2a538f0ced27fce2e427908b6409afcd2d1": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(200704,3584,64,1);\nconst ivec4 v2 = ivec4(1,56,56,64);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(802816,7168,64,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,98);\nconst vec2 v7 = vec2(0.0001220703125,0.01020408163265306);\n\nvoid main() {\n    ivec4 variable_position_y = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n    int n = variable_position_y.x;\n    int h2 = variable_position_y.y;\n    int w2 = variable_position_y.z;\n    int c = variable_position_y.w;\n\n    float v = -1e5;\n\n    for (int kh = 0; kh < 3; kh++) {\n        int h1 = h2 * 2 - 1 + kh;\n        if (h1 < 0 || h1 >= 112) continue;\n\n        for (int kw = 0; kw < 3; kw++) {\n            int w1 = w2 * 2 - 1 + kw;\n            if (w1 < 0 || w1 >= 112) continue;\n\n            v = max((texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c)),v4, v5, v6, 0))) + 0.5) * v7))).r, v);\n        }\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ConvertRtoRGBA_bf53736b19d956226febac8d7251107ac1fc8da4b9a3681b7fac9f22": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(64,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(25,8192,1);\nconst vec3 v4 = vec3(0.04,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(64,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(25,8192,1);\nconst vec3 v8 = vec3(0.04,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(64,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(25,8192,1);\nconst vec3 v12 = vec3(0.04,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(64,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(25,8192,1);\nconst vec3 v16 = vec3(0.04,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_7bbfdaea96e6c4f62129704f808d25add84c0fb53ae71705320fb653": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(64,1);\nconst ivec2 v2 = ivec2(3136,64);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0625,0.00031887755102040814);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0625,0.015625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 16; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_7e1d21958c1176853142d71fc8f8369a6378d8f21cbee4ffd8080928": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(64,1,1,1);\nconst ivec4 v2 = ivec4(3136,64,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(64,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,25);\nconst vec2 v7 = vec2(0.0001220703125,0.04);\nconst ivec4 v8 = ivec4(1,64,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,64);\nconst ivec2 v12 = ivec2(64,1);\nconst vec2 v13 = vec2(0.015625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,25.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_6a358266202cbf47ede204592ac23a9d1604a830729d54caa1271cb5": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(576,4);\nconst ivec4 v1 = ivec4(1806336,32256,576,1);\nconst ivec4 v2 = ivec4(1,56,56,576);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(200704,3584,64,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,25);\nconst vec2 v7 = vec2(0.0001220703125,0.04);\nconst ivec4 v8 = ivec4(200704,3584,64,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,25);\nconst vec2 v11 = vec2(0.0001220703125,0.04);\nconst ivec4 v12 = ivec4(200704,3584,64,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,25);\nconst vec2 v15 = vec2(0.0001220703125,0.04);\nconst ivec4 v16 = ivec4(200704,3584,64,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,25);\nconst vec2 v19 = vec2(0.0001220703125,0.04);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 64 / 3;\n    int kw = khkwc1 / 64 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 64;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 56 || w1 < 0 || w1 >= 56) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_fc5dad642b2e69786a1d8cafb2ed8adaec911acbdaf568ca418eae27": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(64,1);\nconst ivec2 v2 = ivec2(3136,64);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.006944444444444444,0.00031887755102040814);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.006944444444444444,0.015625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 144; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Tensordot_RGBA_bf4f49ccb7e0797f0ca4727cfe2e308db443d4761f8840aef99f149b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(256,1);\nconst ivec2 v2 = ivec2(3136,256);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0625,0.00031887755102040814);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0625,0.00390625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 16; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_6db317773c4e6b994c38f590d635b6be76f52db5a0d6ac070a9ac759": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,98.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,98.0);\n\nvoid main() {\n    float y;\n\nfloat x1 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x0 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_9b65bdc449d8c8ecd13cf83655ac7734d9ace8d5d188fb871ba0ba99": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(256,1,1,1);\nconst ivec4 v2 = ivec4(3136,256,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(256,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,98);\nconst vec2 v7 = vec2(0.0001220703125,0.01020408163265306);\nconst ivec4 v8 = ivec4(1,256,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,256);\nconst ivec2 v12 = ivec2(256,1);\nconst vec2 v13 = vec2(0.00390625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_061560060a3c1e6f9ff58f491ecdc246a4febc84a35b24885483a572": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(256,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(98,8192,1);\nconst vec3 v4 = vec3(0.01020408163265306,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(256,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(98,8192,1);\nconst vec3 v8 = vec3(0.01020408163265306,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(256,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(98,8192,1);\nconst vec3 v12 = vec3(0.01020408163265306,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(256,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(98,8192,1);\nconst vec3 v16 = vec3(0.01020408163265306,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_0a03b791d081d9f740617aa1dcf223a7d50e7b2180ed0d5084e7c1e6": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(64,1);\nconst ivec2 v2 = ivec2(3136,64);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.015625,0.00031887755102040814);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.015625,0.015625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 64; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_cd248ab9d070741d35cffa056290e82264809fb3bc21686067c3f0c0": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,98.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,98.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_9178ba7bb82ac365cd82a8428f10878b2233fa190bb23dc59d14e8d4": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(256,1,1,1);\nconst ivec4 v2 = ivec4(3136,256,1,1);\nconst ivec4 v3 = ivec4(1,256,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,256);\nconst ivec2 v7 = ivec2(256,1);\nconst vec2 v8 = vec2(0.00390625,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(256,1,1,1);\nconst ivec2 v11 = ivec2(1,8192);\nconst ivec2 v12 = ivec2(8192,98);\nconst vec2 v13 = vec2(0.0001220703125,0.01020408163265306);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x0 = mod(variable_position_y, v3);\nfloat x0 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x0,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_a5f3d02bb705ac4af7edebd1871ad65d7a104305c2203137b5b7d385": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(256,4);\nconst ivec4 v1 = ivec4(200704,7168,256,1);\nconst ivec4 v2 = ivec4(1,28,28,256);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(802816,14336,256,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,98);\nconst vec2 v7 = vec2(0.0001220703125,0.01020408163265306);\nconst ivec4 v8 = ivec4(802816,14336,256,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,98);\nconst vec2 v11 = vec2(0.0001220703125,0.01020408163265306);\nconst ivec4 v12 = ivec4(802816,14336,256,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,98);\nconst vec2 v15 = vec2(0.0001220703125,0.01020408163265306);\nconst ivec4 v16 = ivec4(802816,14336,256,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,98);\nconst vec2 v19 = vec2(0.0001220703125,0.01020408163265306);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 256 / 1;\n    int kw = khkwc1 / 256 - kh * 1;\n    int c1 = khkwc1 - (kh * 1 + kw) * 256;\n\n    int h1 = h2 * 2 - 0 + kh * 1;\n    int w1 = w2 * 2 - 0 + kw * 1;\n\n    if (h1 < 0 || h1 >= 56 || w1 < 0 || w1 >= 56) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_a7f4b997a00d63938232abe063a0fa2d51c6c8d2627f496f843a3874": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(128,1);\nconst ivec2 v2 = ivec2(784,128);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.015625,0.0012755102040816326);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.015625,0.0078125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 64; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(128,1,1,1);\nconst ivec4 v2 = ivec4(784,128,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(128,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,13);\nconst vec2 v7 = vec2(0.0001220703125,0.07692307692307693);\nconst ivec4 v8 = ivec4(1,128,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,128);\nconst ivec2 v12 = ivec2(128,1);\nconst vec2 v13 = vec2(0.0078125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,13.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_a943845e4ada017175d3c674c513b873ee7a275653548494ea728c7a": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1152,4);\nconst ivec4 v1 = ivec4(903168,32256,1152,1);\nconst ivec4 v2 = ivec4(1,28,28,1152);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(100352,3584,128,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,13);\nconst vec2 v7 = vec2(0.0001220703125,0.07692307692307693);\nconst ivec4 v8 = ivec4(100352,3584,128,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,13);\nconst vec2 v11 = vec2(0.0001220703125,0.07692307692307693);\nconst ivec4 v12 = ivec4(100352,3584,128,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,13);\nconst vec2 v15 = vec2(0.0001220703125,0.07692307692307693);\nconst ivec4 v16 = ivec4(100352,3584,128,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,13);\nconst vec2 v19 = vec2(0.0001220703125,0.07692307692307693);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 128 / 3;\n    int kw = khkwc1 / 128 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 128;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 28 || w1 < 0 || w1 >= 28) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_f00c132b7b4c890704ab3878ab0e03ddfc99120da4a76c76e273981c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(128,1);\nconst ivec2 v2 = ivec2(784,128);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.003472222222222222,0.0012755102040816326);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.003472222222222222,0.0078125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 288; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ConvertRtoRGBA_2ecd12e5763499b4da2c18ee4f8458ff2dcfac137544f805facdee9e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(128,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(13,8192,1);\nconst vec3 v4 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(128,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(13,8192,1);\nconst vec3 v8 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(128,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(13,8192,1);\nconst vec3 v12 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(128,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(13,8192,1);\nconst vec3 v16 = vec3(0.07692307692307693,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_743e7cad0a4b1e24227dd916d724b19281fa73243aebd893ea48ebc6": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(784,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.03125,0.0012755102040816326);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.03125,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 32; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Tensordot_RGBA_5bc68bcabe114d3ee7df06f8a7dd7dd43b708a62c009d983ad8ee2bd": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(784,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.015625,0.0012755102040816326);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.015625,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 64; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_3e39163d917d910b5b86893d62827a216d9346c8e7ffc6ffb5509343": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,49.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,49.0);\n\nvoid main() {\n    float y;\n\nfloat x1 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x0 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_d17831a002ad24ab6acee630303afc34e4a6884f557ceabe6e457207": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(512,1,1,1);\nconst ivec4 v2 = ivec4(784,512,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(512,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,49);\nconst vec2 v7 = vec2(0.0001220703125,0.02040816326530612);\nconst ivec4 v8 = ivec4(1,512,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,512);\nconst ivec2 v12 = ivec2(512,1);\nconst vec2 v13 = vec2(0.001953125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_9f6fd8b5d518659a635b5aeae8d3394b899eb03ae043dc1f84ab03c2": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,49.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_619ce4239756512df13d0570850e09dae349fedc7faf0a79d3cc7f2c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(512,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(49,8192,1);\nconst vec3 v4 = vec3(0.02040816326530612,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(512,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(49,8192,1);\nconst vec3 v8 = vec3(0.02040816326530612,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(512,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(49,8192,1);\nconst vec3 v12 = vec3(0.02040816326530612,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(512,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(49,8192,1);\nconst vec3 v16 = vec3(0.02040816326530612,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_e42a9f202ff0e906a50efcbc9da50e2e44dd51ef43ab7dc642d38045": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(128,1);\nconst ivec2 v2 = ivec2(784,128);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0078125,0.0012755102040816326);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0078125,0.0078125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 128; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_ff314f97eb87ad7f93d365bda474752dd3bb9202b5caea505d452d5f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,49.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,49.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_cab34c79962a75acd77729592f9079ee0842b03615267f07ce21def1": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(512,1,1,1);\nconst ivec4 v2 = ivec4(784,512,1,1);\nconst ivec4 v3 = ivec4(1,512,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,512);\nconst ivec2 v7 = ivec2(512,1);\nconst vec2 v8 = vec2(0.001953125,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(512,1,1,1);\nconst ivec2 v11 = ivec2(1,8192);\nconst ivec2 v12 = ivec2(8192,49);\nconst vec2 v13 = vec2(0.0001220703125,0.02040816326530612);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x0 = mod(variable_position_y, v3);\nfloat x0 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x0,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_8cfd722aaec9b2624b1ef934b88536005b4e6d6490db8eadfd460dec": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(512,4);\nconst ivec4 v1 = ivec4(100352,7168,512,1);\nconst ivec4 v2 = ivec4(1,14,14,512);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(401408,14336,512,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,49);\nconst vec2 v7 = vec2(0.0001220703125,0.02040816326530612);\nconst ivec4 v8 = ivec4(401408,14336,512,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,49);\nconst vec2 v11 = vec2(0.0001220703125,0.02040816326530612);\nconst ivec4 v12 = ivec4(401408,14336,512,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,49);\nconst vec2 v15 = vec2(0.0001220703125,0.02040816326530612);\nconst ivec4 v16 = ivec4(401408,14336,512,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,49);\nconst vec2 v19 = vec2(0.0001220703125,0.02040816326530612);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 512 / 1;\n    int kw = khkwc1 / 512 - kh * 1;\n    int c1 = khkwc1 - (kh * 1 + kw) * 512;\n\n    int h1 = h2 * 2 - 0 + kh * 1;\n    int w1 = w2 * 2 - 0 + kw * 1;\n\n    if (h1 < 0 || h1 >= 28 || w1 < 0 || w1 >= 28) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_12c28d983d30d1379439c1ff2f78de9f6398f5cc5769d390ee4a4f16": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(256,1);\nconst ivec2 v2 = ivec2(196,256);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0078125,0.00510204081632653);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0078125,0.00390625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 128; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(256,1,1,1);\nconst ivec4 v2 = ivec4(196,256,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(256,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,7);\nconst vec2 v7 = vec2(0.0001220703125,0.14285714285714285);\nconst ivec4 v8 = ivec4(1,256,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,256);\nconst ivec2 v12 = ivec2(256,1);\nconst vec2 v13 = vec2(0.00390625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,7.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(2304,4);\nconst ivec4 v1 = ivec4(451584,32256,2304,1);\nconst ivec4 v2 = ivec4(1,14,14,2304);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(50176,3584,256,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,7);\nconst vec2 v7 = vec2(0.0001220703125,0.14285714285714285);\nconst ivec4 v8 = ivec4(50176,3584,256,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,7);\nconst vec2 v11 = vec2(0.0001220703125,0.14285714285714285);\nconst ivec4 v12 = ivec4(50176,3584,256,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,7);\nconst vec2 v15 = vec2(0.0001220703125,0.14285714285714285);\nconst ivec4 v16 = ivec4(50176,3584,256,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,7);\nconst vec2 v19 = vec2(0.0001220703125,0.14285714285714285);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 256 / 3;\n    int kw = khkwc1 / 256 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 256;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 14 || w1 < 0 || w1 >= 14) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(256,1);\nconst ivec2 v2 = ivec2(196,256);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.001736111111111111,0.00510204081632653);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.001736111111111111,0.00390625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 576; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(256,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(7,8192,1);\nconst vec3 v4 = vec3(0.14285714285714285,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(256,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(7,8192,1);\nconst vec3 v8 = vec3(0.14285714285714285,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(256,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(7,8192,1);\nconst vec3 v12 = vec3(0.14285714285714285,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(256,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(7,8192,1);\nconst vec3 v16 = vec3(0.14285714285714285,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(1024,1);\nconst ivec2 v2 = ivec2(196,1024);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.015625,0.00510204081632653);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.015625,0.0009765625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 64; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Tensordot_RGBA_56570407612045294fb854124037decf8f09db4f0aa9f4261419019c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(1024,1);\nconst ivec2 v2 = ivec2(196,1024);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0078125,0.00510204081632653);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0078125,0.0009765625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 128; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_45b80ff942897ffc31f0e544f1ef2973c79511080490894af13ecfd7": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,25.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,25.0);\n\nvoid main() {\n    float y;\n\nfloat x1 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x0 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_40240dd6801b10fb859ccfa84c4ad53364fe843531d220b2ca9ba92e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(1024,1,1,1);\nconst ivec4 v2 = ivec4(196,1024,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1024,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,25);\nconst vec2 v7 = vec2(0.0001220703125,0.04);\nconst ivec4 v8 = ivec4(1,1024,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,1024);\nconst ivec2 v12 = ivec2(1024,1);\nconst vec2 v13 = vec2(0.0009765625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(1024,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(25,8192,1);\nconst vec3 v4 = vec3(0.04,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(1024,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(25,8192,1);\nconst vec3 v8 = vec3(0.04,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(1024,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(25,8192,1);\nconst vec3 v12 = vec3(0.04,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(1024,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(25,8192,1);\nconst vec3 v16 = vec3(0.04,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(256,1);\nconst ivec2 v2 = ivec2(196,256);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.00390625,0.00510204081632653);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.00390625,0.00390625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 256; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,25.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,25.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(1024,1,1,1);\nconst ivec4 v2 = ivec4(196,1024,1,1);\nconst ivec4 v3 = ivec4(1,1024,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,1024);\nconst ivec2 v7 = ivec2(1024,1);\nconst vec2 v8 = vec2(0.0009765625,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1024,1,1,1);\nconst ivec2 v11 = ivec2(1,8192);\nconst ivec2 v12 = ivec2(8192,25);\nconst vec2 v13 = vec2(0.0001220703125,0.04);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x0 = mod(variable_position_y, v3);\nfloat x0 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x0,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_48802f8b5a0e9113d1903323e0ddbd3ce2585279758b50ca4f6be6a4": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1024,4);\nconst ivec4 v1 = ivec4(50176,7168,1024,1);\nconst ivec4 v2 = ivec4(1,7,7,1024);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(200704,14336,1024,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,25);\nconst vec2 v7 = vec2(0.0001220703125,0.04);\nconst ivec4 v8 = ivec4(200704,14336,1024,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,25);\nconst vec2 v11 = vec2(0.0001220703125,0.04);\nconst ivec4 v12 = ivec4(200704,14336,1024,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,25);\nconst vec2 v15 = vec2(0.0001220703125,0.04);\nconst ivec4 v16 = ivec4(200704,14336,1024,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,25);\nconst vec2 v19 = vec2(0.0001220703125,0.04);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 1024 / 1;\n    int kw = khkwc1 / 1024 - kh * 1;\n    int c1 = khkwc1 - (kh * 1 + kw) * 1024;\n\n    int h1 = h2 * 2 - 0 + kh * 1;\n    int w1 = w2 * 2 - 0 + kw * 1;\n\n    if (h1 < 0 || h1 >= 14 || w1 < 0 || w1 >= 14) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_9c3e0108fd64389c3682227b56341e2893f63cf2c12c2ca475e791a5": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(49,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.00390625,0.02040816326530612);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.00390625,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 256; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(512,1,1,1);\nconst ivec4 v2 = ivec4(49,512,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(512,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,4);\nconst vec2 v7 = vec2(0.0001220703125,0.25);\nconst ivec4 v8 = ivec4(1,512,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,512);\nconst ivec2 v12 = ivec2(512,1);\nconst vec2 v13 = vec2(0.001953125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,4.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_2201d86abd0e1a6f7d66240bc6cc9270ef4b13ece637bfa2f13729a9": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(4608,4);\nconst ivec4 v1 = ivec4(225792,32256,4608,1);\nconst ivec4 v2 = ivec4(1,7,7,4608);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(25088,3584,512,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,4);\nconst vec2 v7 = vec2(0.0001220703125,0.25);\nconst ivec4 v8 = ivec4(25088,3584,512,1);\nconst ivec2 v9 = ivec2(1,8192);\nconst ivec2 v10 = ivec2(8192,4);\nconst vec2 v11 = vec2(0.0001220703125,0.25);\nconst ivec4 v12 = ivec4(25088,3584,512,1);\nconst ivec2 v13 = ivec2(1,8192);\nconst ivec2 v14 = ivec2(8192,4);\nconst vec2 v15 = vec2(0.0001220703125,0.25);\nconst ivec4 v16 = ivec4(25088,3584,512,1);\nconst ivec2 v17 = ivec2(1,8192);\nconst ivec2 v18 = ivec2(8192,4);\nconst vec2 v19 = vec2(0.0001220703125,0.25);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 512 / 3;\n    int kw = khkwc1 / 512 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 512;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 7 || w1 < 0 || w1 >= 7) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1)),v8, v9, v10, 0))) + 0.5) * v11))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2)),v12, v13, v14, 0))) + 0.5) * v15))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3)),v16, v17, v18, 0))) + 0.5) * v19))).r;\n    }\n}\n",
    "Tensordot_RGBA_a2e7cbfde592bd474e27cb1b7578dc2539700c6156c1f10072048abb": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(49,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0008680555555555555,0.02040816326530612);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0008680555555555555,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 1152; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ConvertRtoRGBA_70479bbb29d402826ba8cc764ebed13c58705ba0ce305e6e33dbc97e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(512,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(4,8192,1);\nconst vec3 v4 = vec3(0.25,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(512,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(4,8192,1);\nconst vec3 v8 = vec3(0.25,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(512,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(4,8192,1);\nconst vec3 v12 = vec3(0.25,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(512,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(4,8192,1);\nconst vec3 v16 = vec3(0.25,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_da7ad27b12fbf9714c59a56566692d60390e4b812545164792b9762d": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(2048,1);\nconst ivec2 v2 = ivec2(49,2048);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0078125,0.02040816326530612);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0078125,0.00048828125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 128; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Tensordot_RGBA_b6266594004da0eeef40e796f7294fc8e5a4e75e4d60e23907db0b39": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(2048,1);\nconst ivec2 v2 = ivec2(49,2048);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.00390625,0.02040816326530612);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.00390625,0.00048828125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 256; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_9111bc4a3243d7c63d04701427d4ce944442da636b61db54bbf51cce": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,13.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,13.0);\n\nvoid main() {\n    float y;\n\nfloat x1 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x0 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_54f0f2b6544327ee0d7a3ca26e466c6f1df233ff1c7a105a799eff86": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(2048,1,1,1);\nconst ivec4 v2 = ivec4(49,2048,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(2048,1,1,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,13);\nconst vec2 v7 = vec2(0.0001220703125,0.07692307692307693);\nconst ivec4 v8 = ivec4(1,2048,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,2048);\nconst ivec2 v12 = ivec2(2048,1);\nconst vec2 v13 = vec2(0.00048828125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_1943bf25c0c528a949f09b19ea593274bc8b7bb340c49bf472603761": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(2048,4,1);\nconst ivec3 v2 = ivec3(8192,1,1);\nconst ivec3 v3 = ivec3(13,8192,1);\nconst vec3 v4 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v5 = ivec3(2048,4,1);\nconst ivec3 v6 = ivec3(8192,1,1);\nconst ivec3 v7 = ivec3(13,8192,1);\nconst vec3 v8 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v9 = ivec3(2048,4,1);\nconst ivec3 v10 = ivec3(8192,1,1);\nconst ivec3 v11 = ivec3(13,8192,1);\nconst vec3 v12 = vec3(0.07692307692307693,0.0001220703125,1.0);\nconst ivec3 v13 = ivec3(2048,4,1);\nconst ivec3 v14 = ivec3(8192,1,1);\nconst ivec3 v15 = ivec3(13,8192,1);\nconst vec3 v16 = vec3(0.07692307692307693,0.0001220703125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_9301d9c31b1cc0c199e30cec3d6b2912d301e8fe57e181fb52b881cf": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(49,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.001953125,0.02040816326530612);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.001953125,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 512; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_54e754030b256b04dfddc0c8d4b13138df07b63a2e6d2f9142eacffa": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(8192.0,13.0);\nuniform sampler2D v2;\nconst vec2 v3 = vec2(8192.0,13.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v3).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_01d56ba214876888139bae202425db5fe92d3c7b0fb4d7a4a1e97d49": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(8192,1);\nconst ivec4 v1 = ivec4(2048,1,1,1);\nconst ivec4 v2 = ivec4(49,2048,1,1);\nconst ivec4 v3 = ivec4(1,2048,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,2048);\nconst ivec2 v7 = ivec2(2048,1);\nconst vec2 v8 = vec2(0.00048828125,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(2048,1,1,1);\nconst ivec2 v11 = ivec2(1,8192);\nconst ivec2 v12 = ivec2(8192,13);\nconst vec2 v13 = vec2(0.0001220703125,0.07692307692307693);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nivec4 variable_position_x0 = mod(variable_position_y, v3);\nfloat x0 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x0,v5, v6, v7, 0))) + 0.5) * v8)).r;\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "AveragePooling2D_36d8924dbef525be019de4c6222ae54070dc341b418bac68d6ef5aa2": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(2048,1);\nconst ivec4 v1 = ivec4(2048,2048,2048,1);\nconst ivec4 v2 = ivec4(1,1,1,2048);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(100352,14336,2048,1);\nconst ivec2 v5 = ivec2(1,8192);\nconst ivec2 v6 = ivec2(8192,13);\nconst vec2 v7 = vec2(0.0001220703125,0.07692307692307693);\n\nvoid main() {\n    ivec4 variable_position_y = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0)));\n    int n = variable_position_y.x;\n    int h2 = variable_position_y.y;\n    int w2 = variable_position_y.z;\n    int c = variable_position_y.w;\n\n    float sum = 0.0;\n    \n\n    for (int kh = 0; kh < 7; kh++) {\n        int h1 = h2 * 1 - 0 + kh;\n        if (h1 < 0 || h1 >= 7) continue;\n\n        for (int kw = 0; kw < 7; kw++) {\n            int w1 = w2 * 1 - 0 + kw;\n            if (w1 < 0 || w1 >= 7) continue;\n\n            sum += (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c)),v4, v5, v6, 0))) + 0.5) * v7))).r;\n            \n        }\n    }\n\n    gl_FragColor.r = sum / 49.0;\n}\n",
    "Reshape_c48a15e6c0d38213687576c0d7f2a26f5a3189ae65b3a581c11bafb8": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec2 v1 = ivec2(2048,1);\nconst ivec4 v2 = ivec4(128,16,4,1);\nconst ivec4 v3 = ivec4(16,8,4,4);\nconst ivec4 v4 = ivec4(128,16,4,1);\nconst ivec4 v5 = ivec4(128,16,4,1);\nconst ivec4 v6 = ivec4(16,8,4,4);\nconst ivec4 v7 = ivec4(128,16,4,1);\nconst ivec2 v8 = ivec2(1,2048);\nconst ivec2 v9 = ivec2(2048,1);\nconst vec2 v10 = vec2(0.00048828125,1.0);\n\nvoid main() {\n    gl_FragColor.r = texture2D(v0,((vec2((convert_position_fast(((convert_position_fast(((convert_position_fast(gl_FragCoord.yx,v1, v2, v3, 0))),v4, v5, v6, 0))),v7, v8, v9, 0))) + 0.5) * v10)).r;\n}\n",
    "ConvertRtoRGBA_ce6cdc6c6849b6259ec3aaea68cda34007a51ef88f7bd9bb67f576cd": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(2048,4,1);\nconst ivec3 v2 = ivec3(2048,1,1);\nconst ivec3 v3 = ivec3(1,2048,1);\nconst vec3 v4 = vec3(1.0,0.00048828125,1.0);\nconst ivec3 v5 = ivec3(2048,4,1);\nconst ivec3 v6 = ivec3(2048,1,1);\nconst ivec3 v7 = ivec3(1,2048,1);\nconst vec3 v8 = vec3(1.0,0.00048828125,1.0);\nconst ivec3 v9 = ivec3(2048,4,1);\nconst ivec3 v10 = ivec3(2048,1,1);\nconst ivec3 v11 = ivec3(1,2048,1);\nconst vec3 v12 = vec3(1.0,0.00048828125,1.0);\nconst ivec3 v13 = ivec3(2048,4,1);\nconst ivec3 v14 = ivec3(2048,1,1);\nconst ivec3 v15 = ivec3(1,2048,1);\nconst vec3 v16 = vec3(1.0,0.00048828125,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3, 0))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v5, v6, v7, 0))) + 0.5) * v8).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v9, v10, v11, 0))) + 0.5) * v12).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v13, v14, v15, 0))) + 0.5) * v16).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_f9aaa084a7c7e24f67165ba79238a1fdd70f51799fac9dd23244e1a1": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1000,1);\nconst ivec2 v1 = ivec2(1000,1);\nconst ivec2 v2 = ivec2(1,1000);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.001953125,1.0);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.001953125,0.001);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 512; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_256e40f348bbdbf01cf9f5bcd445855220f896d5d5b25f406cbd9acc": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1000,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(1000,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,1000);\nconst ivec2 v6 = ivec2(1000,1);\nconst vec2 v7 = vec2(0.001,1.0);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,1000);\nconst ivec2 v11 = ivec2(1000,1);\nconst vec2 v12 = vec2(0.001,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_y,v9, v10, v11, 0))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Max_885c4b8c86b77a1b300d120e377b19a432f3e4a3a43d300d03aaf7f0": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(1,1,1,1);\nconst ivec4 v3 = ivec4(1000,1,1,1000);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,1000);\nconst ivec2 v7 = ivec2(1000,1);\nconst vec2 v8 = vec2(0.001,1.0);\n\nvoid main() {\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n    ivec4 variable_position_x = mod(variable_position_y, v3);\n    const int n_x = 1000;\n    float y;\n\n    \n    y = -1.0e10;\n\n    for (int i_x = 0; i_x < 1000; i_x++) {\n        variable_position_x.w = i_x;\n        float x = texture2D(v4, ((vec2((convert_position_fast(variable_position_x,v5, v6, v7, 0))) + 0.5) * v8)).r;\n        {\n            y = x > y ? x : y;\n        }\n    }\n\n    \n\n    gl_FragColor.r = y;\n}\n",
    "ScalarMul_84dc71782759eeab96325a189104a217e74a5af0cca324721b1ae6a2": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(1.0,1.0);\nconst float value = -1.0;\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 * float(value);\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_ea228ba591aabb7ef001c629b2ecfe26cbdf5bda2c9e3c1fcebeb960": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1000,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(1000,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,1000);\nconst ivec2 v6 = ivec2(1000,1);\nconst vec2 v7 = vec2(0.001,1.0);\nconst ivec4 v8 = ivec4(1,1,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,1);\nconst ivec2 v12 = ivec2(1,1);\nconst vec2 v13 = vec2(1.0,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Exp_c866ca567df66a01ff9f147487704a97a59dea34bfeb9d30cee61ecf": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(1000.0,1.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = exp(x0);\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Sum_1d32fe42bc9fef2ac9967cc69f2ee13fc30daf2a6830f32a7611e006": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(1,1,1,1);\nconst ivec4 v3 = ivec4(1000,1,1,1000);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,1000);\nconst ivec2 v7 = ivec2(1000,1);\nconst vec2 v8 = vec2(0.001,1.0);\n\nvoid main() {\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n    ivec4 variable_position_x = mod(variable_position_y, v3);\n    const int n_x = 1000;\n    float y;\n\n    \n    y = 0.0;\n\n    for (int i_x = 0; i_x < 1000; i_x++) {\n        variable_position_x.w = i_x;\n        float x = texture2D(v4, ((vec2((convert_position_fast(variable_position_x,v5, v6, v7, 0))) + 0.5) * v8)).r;\n        {\n            y += x;\n        }\n    }\n\n    \n\n    gl_FragColor.r = y;\n}\n",
    "ElementwiseDiv_1a0de457d521914217c86e122a9badb7edfef6941e7ac9e9c00070d0": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3] + offset) / s2, d2);\n}\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int offset) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, offset);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n\n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n\n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n\n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1000,1);\nconst ivec4 v1 = ivec4(1,1,1,1);\nconst ivec4 v2 = ivec4(1000,1,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1,1,1);\nconst ivec2 v5 = ivec2(1,1000);\nconst ivec2 v6 = ivec2(1000,1);\nconst vec2 v7 = vec2(0.001,1.0);\nconst ivec4 v8 = ivec4(1,1,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,1);\nconst ivec2 v12 = ivec2(1,1);\nconst vec2 v13 = vec2(1.0,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2, 0));\n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6, 0))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12, 0))) + 0.5) * v13)).r;\ny = x0 / x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n"
  },
  "exec_infos": [
    {
      "shader_name": "PartialIm2Col_R_dafb28ba7bedfb27a3247325a76e79d4e30fcad309c6a620934addc8",
      "inputs": [
        {
          "variable_name": "Variable1",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1371"
    },
    {
      "shader_name": "PartialIm2Col_R_0a1011595409fff03ff3f93e0f50d7f243a6a88f846d44c7512015f6",
      "inputs": [
        {
          "variable_name": "Variable1",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1372"
    },
    {
      "shader_name": "Tensordot_R_aafe262f0a8a2ebbe58812bb62f942767fd8e753c592f7e18c66171b",
      "inputs": [
        {
          "variable_name": "Variable1371",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable840",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1373"
    },
    {
      "shader_name": "Tensordot_R_aafe262f0a8a2ebbe58812bb62f942767fd8e753c592f7e18c66171b",
      "inputs": [
        {
          "variable_name": "Variable1372",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable841",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1374"
    },
    {
      "shader_name": "Concat_30eabac47f4909c9a3fc5e928f72f429ff86741f3fd1d5620efda7e3",
      "inputs": [
        {
          "variable_name": "Variable1374",
          "value": 0
        },
        {
          "variable_name": "Variable1373",
          "value": 1
        }
      ],
      "uniforms": {
        "v6": {
          "type": "sampler2D",
          "value": 0
        },
        "v11": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1185"
    },
    {
      "shader_name": "ElementwiseMul_d69c354d6e6c1951a0a20f931f84c688e0a4f69f0fa9e0f4d6720393",
      "inputs": [
        {
          "variable_name": "ConstantVariable6",
          "value": 0
        },
        {
          "variable_name": "Variable1185",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable718"
    },
    {
      "shader_name": "ElementwiseAdd_2bc04e710409ce908a7877e92a31b508ed9507e36c9a6af70926ea3b",
      "inputs": [
        {
          "variable_name": "Variable718",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable501",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable6"
    },
    {
      "shader_name": "Relu_22575c2a096342ebbf6ffb700203eb438f7e9870eaa1a916b936e69b",
      "inputs": [
        {
          "variable_name": "Variable6",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable7"
    },
    {
      "shader_name": "MaxPooling2D_49ba9086238c875f9b04a2a538f0ced27fce2e427908b6409afcd2d1",
      "inputs": [
        {
          "variable_name": "Variable7",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1487"
    },
    {
      "shader_name": "ConvertRtoRGBA_bf53736b19d956226febac8d7251107ac1fc8da4b9a3681b7fac9f22",
      "inputs": [
        {
          "variable_name": "Variable1487",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable9"
    },
    {
      "shader_name": "Tensordot_RGBA_7bbfdaea96e6c4f62129704f808d25add84c0fb53ae71705320fb653",
      "inputs": [
        {
          "variable_name": "Variable9",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable962",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable12"
    },
    {
      "shader_name": "ElementwiseAdd_7e1d21958c1176853142d71fc8f8369a6378d8f21cbee4ffd8080928",
      "inputs": [
        {
          "variable_name": "Variable12",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable11",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable13"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable13",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable14"
    },
    {
      "shader_name": "Im2Col_RGBA_6a358266202cbf47ede204592ac23a9d1604a830729d54caa1271cb5",
      "inputs": [
        {
          "variable_name": "Variable14",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1191"
    },
    {
      "shader_name": "Tensordot_RGBA_fc5dad642b2e69786a1d8cafb2ed8adaec911acbdaf568ca418eae27",
      "inputs": [
        {
          "variable_name": "Variable1191",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable964",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable17"
    },
    {
      "shader_name": "ElementwiseAdd_7e1d21958c1176853142d71fc8f8369a6378d8f21cbee4ffd8080928",
      "inputs": [
        {
          "variable_name": "Variable17",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable15",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable18"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable18",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1489"
    },
    {
      "shader_name": "ConvertRtoRGBA_bf53736b19d956226febac8d7251107ac1fc8da4b9a3681b7fac9f22",
      "inputs": [
        {
          "variable_name": "Variable1489",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable19"
    },
    {
      "shader_name": "Tensordot_RGBA_bf4f49ccb7e0797f0ca4727cfe2e308db443d4761f8840aef99f149b",
      "inputs": [
        {
          "variable_name": "Variable19",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable966",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable24"
    },
    {
      "shader_name": "Tensordot_RGBA_bf4f49ccb7e0797f0ca4727cfe2e308db443d4761f8840aef99f149b",
      "inputs": [
        {
          "variable_name": "Variable9",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable968",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable26"
    },
    {
      "shader_name": "ElementwiseAdd_6db317773c4e6b994c38f590d635b6be76f52db5a0d6ac070a9ac759",
      "inputs": [
        {
          "variable_name": "Variable26",
          "value": 0
        },
        {
          "variable_name": "Variable24",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable726"
    },
    {
      "shader_name": "ElementwiseAdd_9b65bdc449d8c8ecd13cf83655ac7734d9ace8d5d188fb871ba0ba99",
      "inputs": [
        {
          "variable_name": "Variable726",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable499",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable28"
    },
    {
      "shader_name": "Relu_22575c2a096342ebbf6ffb700203eb438f7e9870eaa1a916b936e69b",
      "inputs": [
        {
          "variable_name": "Variable28",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1495"
    },
    {
      "shader_name": "ConvertRtoRGBA_061560060a3c1e6f9ff58f491ecdc246a4febc84a35b24885483a572",
      "inputs": [
        {
          "variable_name": "Variable1495",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable29"
    },
    {
      "shader_name": "Tensordot_RGBA_0a03b791d081d9f740617aa1dcf223a7d50e7b2180ed0d5084e7c1e6",
      "inputs": [
        {
          "variable_name": "Variable29",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable970",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable32"
    },
    {
      "shader_name": "ElementwiseAdd_7e1d21958c1176853142d71fc8f8369a6378d8f21cbee4ffd8080928",
      "inputs": [
        {
          "variable_name": "Variable32",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable27",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable33"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable33",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable34"
    },
    {
      "shader_name": "Im2Col_RGBA_6a358266202cbf47ede204592ac23a9d1604a830729d54caa1271cb5",
      "inputs": [
        {
          "variable_name": "Variable34",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1204"
    },
    {
      "shader_name": "Tensordot_RGBA_fc5dad642b2e69786a1d8cafb2ed8adaec911acbdaf568ca418eae27",
      "inputs": [
        {
          "variable_name": "Variable1204",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable960",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable37"
    },
    {
      "shader_name": "ElementwiseAdd_7e1d21958c1176853142d71fc8f8369a6378d8f21cbee4ffd8080928",
      "inputs": [
        {
          "variable_name": "Variable37",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable31",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable38"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable38",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1493"
    },
    {
      "shader_name": "ConvertRtoRGBA_bf53736b19d956226febac8d7251107ac1fc8da4b9a3681b7fac9f22",
      "inputs": [
        {
          "variable_name": "Variable1493",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable39"
    },
    {
      "shader_name": "Tensordot_RGBA_bf4f49ccb7e0797f0ca4727cfe2e308db443d4761f8840aef99f149b",
      "inputs": [
        {
          "variable_name": "Variable39",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable972",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable42"
    },
    {
      "shader_name": "ElementwiseAdd_cd248ab9d070741d35cffa056290e82264809fb3bc21686067c3f0c0",
      "inputs": [
        {
          "variable_name": "Variable42",
          "value": 0
        },
        {
          "variable_name": "Variable1495",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable728"
    },
    {
      "shader_name": "ElementwiseAdd_9178ba7bb82ac365cd82a8428f10878b2233fa190bb23dc59d14e8d4",
      "inputs": [
        {
          "variable_name": "ConstantVariable35",
          "value": 0
        },
        {
          "variable_name": "Variable728",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable44"
    },
    {
      "shader_name": "Relu_22575c2a096342ebbf6ffb700203eb438f7e9870eaa1a916b936e69b",
      "inputs": [
        {
          "variable_name": "Variable44",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1500"
    },
    {
      "shader_name": "ConvertRtoRGBA_061560060a3c1e6f9ff58f491ecdc246a4febc84a35b24885483a572",
      "inputs": [
        {
          "variable_name": "Variable1500",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable45"
    },
    {
      "shader_name": "Tensordot_RGBA_0a03b791d081d9f740617aa1dcf223a7d50e7b2180ed0d5084e7c1e6",
      "inputs": [
        {
          "variable_name": "Variable45",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable974",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable48"
    },
    {
      "shader_name": "ElementwiseAdd_7e1d21958c1176853142d71fc8f8369a6378d8f21cbee4ffd8080928",
      "inputs": [
        {
          "variable_name": "Variable48",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable39",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable49"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable49",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable50"
    },
    {
      "shader_name": "Im2Col_RGBA_6a358266202cbf47ede204592ac23a9d1604a830729d54caa1271cb5",
      "inputs": [
        {
          "variable_name": "Variable50",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1214"
    },
    {
      "shader_name": "Tensordot_RGBA_fc5dad642b2e69786a1d8cafb2ed8adaec911acbdaf568ca418eae27",
      "inputs": [
        {
          "variable_name": "Variable1214",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable958",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable53"
    },
    {
      "shader_name": "ElementwiseAdd_7e1d21958c1176853142d71fc8f8369a6378d8f21cbee4ffd8080928",
      "inputs": [
        {
          "variable_name": "Variable53",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable43",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable54"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable54",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1498"
    },
    {
      "shader_name": "ConvertRtoRGBA_bf53736b19d956226febac8d7251107ac1fc8da4b9a3681b7fac9f22",
      "inputs": [
        {
          "variable_name": "Variable1498",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable55"
    },
    {
      "shader_name": "Tensordot_RGBA_bf4f49ccb7e0797f0ca4727cfe2e308db443d4761f8840aef99f149b",
      "inputs": [
        {
          "variable_name": "Variable55",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable976",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable58"
    },
    {
      "shader_name": "ElementwiseAdd_cd248ab9d070741d35cffa056290e82264809fb3bc21686067c3f0c0",
      "inputs": [
        {
          "variable_name": "Variable58",
          "value": 0
        },
        {
          "variable_name": "Variable1500",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable729"
    },
    {
      "shader_name": "ElementwiseAdd_9178ba7bb82ac365cd82a8428f10878b2233fa190bb23dc59d14e8d4",
      "inputs": [
        {
          "variable_name": "ConstantVariable47",
          "value": 0
        },
        {
          "variable_name": "Variable729",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable60"
    },
    {
      "shader_name": "Relu_22575c2a096342ebbf6ffb700203eb438f7e9870eaa1a916b936e69b",
      "inputs": [
        {
          "variable_name": "Variable60",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable61"
    },
    {
      "shader_name": "Im2Col_RGBA_a5f3d02bb705ac4af7edebd1871ad65d7a104305c2203137b5b7d385",
      "inputs": [
        {
          "variable_name": "Variable61",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1232"
    },
    {
      "shader_name": "Tensordot_RGBA_a7f4b997a00d63938232abe063a0fa2d51c6c8d2627f496f843a3874",
      "inputs": [
        {
          "variable_name": "Variable1232",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable978",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable64"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable64",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable51",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable65"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable65",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable66"
    },
    {
      "shader_name": "Im2Col_RGBA_a943845e4ada017175d3c674c513b873ee7a275653548494ea728c7a",
      "inputs": [
        {
          "variable_name": "Variable66",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1225"
    },
    {
      "shader_name": "Tensordot_RGBA_f00c132b7b4c890704ab3878ab0e03ddfc99120da4a76c76e273981c",
      "inputs": [
        {
          "variable_name": "Variable1225",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable980",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable69"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable69",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable55",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable70"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable70",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1501"
    },
    {
      "shader_name": "ConvertRtoRGBA_2ecd12e5763499b4da2c18ee4f8458ff2dcfac137544f805facdee9e",
      "inputs": [
        {
          "variable_name": "Variable1501",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable71"
    },
    {
      "shader_name": "Tensordot_RGBA_743e7cad0a4b1e24227dd916d724b19281fa73243aebd893ea48ebc6",
      "inputs": [
        {
          "variable_name": "Variable71",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable982",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable76"
    },
    {
      "shader_name": "Tensordot_RGBA_5bc68bcabe114d3ee7df06f8a7dd7dd43b708a62c009d983ad8ee2bd",
      "inputs": [
        {
          "variable_name": "Variable1232",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable956",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable78"
    },
    {
      "shader_name": "ElementwiseAdd_3e39163d917d910b5b86893d62827a216d9346c8e7ffc6ffb5509343",
      "inputs": [
        {
          "variable_name": "Variable78",
          "value": 0
        },
        {
          "variable_name": "Variable76",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable730"
    },
    {
      "shader_name": "ElementwiseAdd_d17831a002ad24ab6acee630303afc34e4a6884f557ceabe6e457207",
      "inputs": [
        {
          "variable_name": "Variable730",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable497",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable80"
    },
    {
      "shader_name": "Relu_9f6fd8b5d518659a635b5aeae8d3394b899eb03ae043dc1f84ab03c2",
      "inputs": [
        {
          "variable_name": "Variable80",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1507"
    },
    {
      "shader_name": "ConvertRtoRGBA_619ce4239756512df13d0570850e09dae349fedc7faf0a79d3cc7f2c",
      "inputs": [
        {
          "variable_name": "Variable1507",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable81"
    },
    {
      "shader_name": "Tensordot_RGBA_e42a9f202ff0e906a50efcbc9da50e2e44dd51ef43ab7dc642d38045",
      "inputs": [
        {
          "variable_name": "Variable81",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable984",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable84"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable84",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable67",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable85"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable85",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable86"
    },
    {
      "shader_name": "Im2Col_RGBA_a943845e4ada017175d3c674c513b873ee7a275653548494ea728c7a",
      "inputs": [
        {
          "variable_name": "Variable86",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1239"
    },
    {
      "shader_name": "Tensordot_RGBA_f00c132b7b4c890704ab3878ab0e03ddfc99120da4a76c76e273981c",
      "inputs": [
        {
          "variable_name": "Variable1239",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable954",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable89"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable89",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable71",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable90"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable90",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1505"
    },
    {
      "shader_name": "ConvertRtoRGBA_2ecd12e5763499b4da2c18ee4f8458ff2dcfac137544f805facdee9e",
      "inputs": [
        {
          "variable_name": "Variable1505",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable91"
    },
    {
      "shader_name": "Tensordot_RGBA_743e7cad0a4b1e24227dd916d724b19281fa73243aebd893ea48ebc6",
      "inputs": [
        {
          "variable_name": "Variable91",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable986",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable94"
    },
    {
      "shader_name": "ElementwiseAdd_ff314f97eb87ad7f93d365bda474752dd3bb9202b5caea505d452d5f",
      "inputs": [
        {
          "variable_name": "Variable94",
          "value": 0
        },
        {
          "variable_name": "Variable1507",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable732"
    },
    {
      "shader_name": "ElementwiseAdd_cab34c79962a75acd77729592f9079ee0842b03615267f07ce21def1",
      "inputs": [
        {
          "variable_name": "ConstantVariable75",
          "value": 0
        },
        {
          "variable_name": "Variable732",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable96"
    },
    {
      "shader_name": "Relu_9f6fd8b5d518659a635b5aeae8d3394b899eb03ae043dc1f84ab03c2",
      "inputs": [
        {
          "variable_name": "Variable96",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1512"
    },
    {
      "shader_name": "ConvertRtoRGBA_619ce4239756512df13d0570850e09dae349fedc7faf0a79d3cc7f2c",
      "inputs": [
        {
          "variable_name": "Variable1512",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable97"
    },
    {
      "shader_name": "Tensordot_RGBA_e42a9f202ff0e906a50efcbc9da50e2e44dd51ef43ab7dc642d38045",
      "inputs": [
        {
          "variable_name": "Variable97",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable988",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable100"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable100",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable79",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable101"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable101",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable102"
    },
    {
      "shader_name": "Im2Col_RGBA_a943845e4ada017175d3c674c513b873ee7a275653548494ea728c7a",
      "inputs": [
        {
          "variable_name": "Variable102",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1249"
    },
    {
      "shader_name": "Tensordot_RGBA_f00c132b7b4c890704ab3878ab0e03ddfc99120da4a76c76e273981c",
      "inputs": [
        {
          "variable_name": "Variable1249",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable990",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable105"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable105",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable83",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable106"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable106",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1510"
    },
    {
      "shader_name": "ConvertRtoRGBA_2ecd12e5763499b4da2c18ee4f8458ff2dcfac137544f805facdee9e",
      "inputs": [
        {
          "variable_name": "Variable1510",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable107"
    },
    {
      "shader_name": "Tensordot_RGBA_743e7cad0a4b1e24227dd916d724b19281fa73243aebd893ea48ebc6",
      "inputs": [
        {
          "variable_name": "Variable107",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable992",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable110"
    },
    {
      "shader_name": "ElementwiseAdd_ff314f97eb87ad7f93d365bda474752dd3bb9202b5caea505d452d5f",
      "inputs": [
        {
          "variable_name": "Variable110",
          "value": 0
        },
        {
          "variable_name": "Variable1512",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable733"
    },
    {
      "shader_name": "ElementwiseAdd_cab34c79962a75acd77729592f9079ee0842b03615267f07ce21def1",
      "inputs": [
        {
          "variable_name": "ConstantVariable87",
          "value": 0
        },
        {
          "variable_name": "Variable733",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable112"
    },
    {
      "shader_name": "Relu_9f6fd8b5d518659a635b5aeae8d3394b899eb03ae043dc1f84ab03c2",
      "inputs": [
        {
          "variable_name": "Variable112",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1517"
    },
    {
      "shader_name": "ConvertRtoRGBA_619ce4239756512df13d0570850e09dae349fedc7faf0a79d3cc7f2c",
      "inputs": [
        {
          "variable_name": "Variable1517",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable113"
    },
    {
      "shader_name": "Tensordot_RGBA_e42a9f202ff0e906a50efcbc9da50e2e44dd51ef43ab7dc642d38045",
      "inputs": [
        {
          "variable_name": "Variable113",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable952",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable116"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable116",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable91",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable117"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable117",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable118"
    },
    {
      "shader_name": "Im2Col_RGBA_a943845e4ada017175d3c674c513b873ee7a275653548494ea728c7a",
      "inputs": [
        {
          "variable_name": "Variable118",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1259"
    },
    {
      "shader_name": "Tensordot_RGBA_f00c132b7b4c890704ab3878ab0e03ddfc99120da4a76c76e273981c",
      "inputs": [
        {
          "variable_name": "Variable1259",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable950",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable121"
    },
    {
      "shader_name": "ElementwiseAdd_713f9d37b49a7b2bf61feabe2a79a44674ea114b99b1d5dd3dccba5d",
      "inputs": [
        {
          "variable_name": "Variable121",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable95",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable122"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable122",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1515"
    },
    {
      "shader_name": "ConvertRtoRGBA_2ecd12e5763499b4da2c18ee4f8458ff2dcfac137544f805facdee9e",
      "inputs": [
        {
          "variable_name": "Variable1515",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable123"
    },
    {
      "shader_name": "Tensordot_RGBA_743e7cad0a4b1e24227dd916d724b19281fa73243aebd893ea48ebc6",
      "inputs": [
        {
          "variable_name": "Variable123",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable948",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable126"
    },
    {
      "shader_name": "ElementwiseAdd_ff314f97eb87ad7f93d365bda474752dd3bb9202b5caea505d452d5f",
      "inputs": [
        {
          "variable_name": "Variable126",
          "value": 0
        },
        {
          "variable_name": "Variable1517",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable734"
    },
    {
      "shader_name": "ElementwiseAdd_cab34c79962a75acd77729592f9079ee0842b03615267f07ce21def1",
      "inputs": [
        {
          "variable_name": "ConstantVariable99",
          "value": 0
        },
        {
          "variable_name": "Variable734",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable128"
    },
    {
      "shader_name": "Relu_9f6fd8b5d518659a635b5aeae8d3394b899eb03ae043dc1f84ab03c2",
      "inputs": [
        {
          "variable_name": "Variable128",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable129"
    },
    {
      "shader_name": "Im2Col_RGBA_8cfd722aaec9b2624b1ef934b88536005b4e6d6490db8eadfd460dec",
      "inputs": [
        {
          "variable_name": "Variable129",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1277"
    },
    {
      "shader_name": "Tensordot_RGBA_12c28d983d30d1379439c1ff2f78de9f6398f5cc5769d390ee4a4f16",
      "inputs": [
        {
          "variable_name": "Variable1277",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable994",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable132"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable132",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable103",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable133"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable133",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable134"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable134",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1270"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1270",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable996",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable137"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable137",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable107",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable138"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable138",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1518"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1518",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable139"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable139",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable998",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable144"
    },
    {
      "shader_name": "Tensordot_RGBA_56570407612045294fb854124037decf8f09db4f0aa9f4261419019c",
      "inputs": [
        {
          "variable_name": "Variable1277",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable946",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable146"
    },
    {
      "shader_name": "ElementwiseAdd_45b80ff942897ffc31f0e544f1ef2973c79511080490894af13ecfd7",
      "inputs": [
        {
          "variable_name": "Variable146",
          "value": 0
        },
        {
          "variable_name": "Variable144",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable735"
    },
    {
      "shader_name": "ElementwiseAdd_40240dd6801b10fb859ccfa84c4ad53364fe843531d220b2ca9ba92e",
      "inputs": [
        {
          "variable_name": "Variable735",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable495",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable148"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable148",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1524"
    },
    {
      "shader_name": "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04",
      "inputs": [
        {
          "variable_name": "Variable1524",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable149"
    },
    {
      "shader_name": "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55",
      "inputs": [
        {
          "variable_name": "Variable149",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1000",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable152"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable152",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable119",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable153"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable153",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable154"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable154",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1284"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1284",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable944",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable157"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable157",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable123",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable158"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable158",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1522"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1522",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable159"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable159",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1002",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable162"
    },
    {
      "shader_name": "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b",
      "inputs": [
        {
          "variable_name": "Variable162",
          "value": 0
        },
        {
          "variable_name": "Variable1524",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable737"
    },
    {
      "shader_name": "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35",
      "inputs": [
        {
          "variable_name": "ConstantVariable127",
          "value": 0
        },
        {
          "variable_name": "Variable737",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable164"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable164",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1529"
    },
    {
      "shader_name": "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04",
      "inputs": [
        {
          "variable_name": "Variable1529",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable165"
    },
    {
      "shader_name": "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55",
      "inputs": [
        {
          "variable_name": "Variable165",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1004",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable168"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable168",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable131",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable169"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable169",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable170"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable170",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1294"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1294",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable942",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable173"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable173",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable135",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable174"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable174",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1527"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1527",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable175"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable175",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1006",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable178"
    },
    {
      "shader_name": "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b",
      "inputs": [
        {
          "variable_name": "Variable178",
          "value": 0
        },
        {
          "variable_name": "Variable1529",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable738"
    },
    {
      "shader_name": "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35",
      "inputs": [
        {
          "variable_name": "ConstantVariable139",
          "value": 0
        },
        {
          "variable_name": "Variable738",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable180"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable180",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1534"
    },
    {
      "shader_name": "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04",
      "inputs": [
        {
          "variable_name": "Variable1534",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable181"
    },
    {
      "shader_name": "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55",
      "inputs": [
        {
          "variable_name": "Variable181",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1008",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable184"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable184",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable143",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable185"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable185",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable186"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable186",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1304"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1304",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable940",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable189"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable189",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable147",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable190"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable190",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1532"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1532",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable191"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable191",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1010",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable194"
    },
    {
      "shader_name": "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b",
      "inputs": [
        {
          "variable_name": "Variable194",
          "value": 0
        },
        {
          "variable_name": "Variable1534",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable739"
    },
    {
      "shader_name": "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35",
      "inputs": [
        {
          "variable_name": "ConstantVariable151",
          "value": 0
        },
        {
          "variable_name": "Variable739",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable196"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable196",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1539"
    },
    {
      "shader_name": "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04",
      "inputs": [
        {
          "variable_name": "Variable1539",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable197"
    },
    {
      "shader_name": "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55",
      "inputs": [
        {
          "variable_name": "Variable197",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1012",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable200"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable200",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable155",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable201"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable201",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable202"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable202",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1314"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1314",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable938",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable205"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable205",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable159",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable206"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable206",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1537"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1537",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable207"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable207",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1014",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable210"
    },
    {
      "shader_name": "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b",
      "inputs": [
        {
          "variable_name": "Variable210",
          "value": 0
        },
        {
          "variable_name": "Variable1539",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable740"
    },
    {
      "shader_name": "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35",
      "inputs": [
        {
          "variable_name": "ConstantVariable163",
          "value": 0
        },
        {
          "variable_name": "Variable740",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable212"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable212",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1544"
    },
    {
      "shader_name": "ConvertRtoRGBA_2086e9de1b29c4e7078978cd22f209d82bcf325964a2222151b93a04",
      "inputs": [
        {
          "variable_name": "Variable1544",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable213"
    },
    {
      "shader_name": "Tensordot_RGBA_4c9e301c90d788f0c1715d93c5cdea0349750a359b76bb9888227d55",
      "inputs": [
        {
          "variable_name": "Variable213",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1016",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable216"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable216",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable167",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable217"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable217",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable218"
    },
    {
      "shader_name": "Im2Col_RGBA_cd627ebc062d6f5f4f40052e0510701f599cf2cad004a2f72bdc1a9a",
      "inputs": [
        {
          "variable_name": "Variable218",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1324"
    },
    {
      "shader_name": "Tensordot_RGBA_e88f9ca593e76b2eac892adb780dd5bd22688993893f88938485e415",
      "inputs": [
        {
          "variable_name": "Variable1324",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable936",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable221"
    },
    {
      "shader_name": "ElementwiseAdd_a2f154dc659d7db9b763be2ab65a65de2f44975fd88fabefe62c0695",
      "inputs": [
        {
          "variable_name": "Variable221",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable171",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable222"
    },
    {
      "shader_name": "Relu_770a4f9533ac62255098b2bdd5a2edf517ff5518fbf0eaaea5c42068",
      "inputs": [
        {
          "variable_name": "Variable222",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1542"
    },
    {
      "shader_name": "ConvertRtoRGBA_4aeaec46d8f874fd8e0de1d153f7703580ba40e6ef503be4cc8858ce",
      "inputs": [
        {
          "variable_name": "Variable1542",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable223"
    },
    {
      "shader_name": "Tensordot_RGBA_7481d5dd60ea1a13d9f4d45b1be89dbe054daa6b7795447d91e439d2",
      "inputs": [
        {
          "variable_name": "Variable223",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1018",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable226"
    },
    {
      "shader_name": "ElementwiseAdd_d69eccd70c46df55334d3921bfeca332de916403a9796e7b54a9d63b",
      "inputs": [
        {
          "variable_name": "Variable226",
          "value": 0
        },
        {
          "variable_name": "Variable1544",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable741"
    },
    {
      "shader_name": "ElementwiseAdd_1312d73cce5d44079992e0b8e2c09774ce9363251b1e3d14ae481d35",
      "inputs": [
        {
          "variable_name": "ConstantVariable175",
          "value": 0
        },
        {
          "variable_name": "Variable741",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable228"
    },
    {
      "shader_name": "Relu_b2155d3f62750e16a29f13c3a732f069ab9470d64f6fa19b65cd2090",
      "inputs": [
        {
          "variable_name": "Variable228",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable229"
    },
    {
      "shader_name": "Im2Col_RGBA_48802f8b5a0e9113d1903323e0ddbd3ce2585279758b50ca4f6be6a4",
      "inputs": [
        {
          "variable_name": "Variable229",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1342"
    },
    {
      "shader_name": "Tensordot_RGBA_9c3e0108fd64389c3682227b56341e2893f63cf2c12c2ca475e791a5",
      "inputs": [
        {
          "variable_name": "Variable1342",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1020",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable232"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable232",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable179",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable233"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable233",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable234"
    },
    {
      "shader_name": "Im2Col_RGBA_2201d86abd0e1a6f7d66240bc6cc9270ef4b13ece637bfa2f13729a9",
      "inputs": [
        {
          "variable_name": "Variable234",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1335"
    },
    {
      "shader_name": "Tensordot_RGBA_a2e7cbfde592bd474e27cb1b7578dc2539700c6156c1f10072048abb",
      "inputs": [
        {
          "variable_name": "Variable1335",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1022",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable237"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable237",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable183",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable238"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable238",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1545"
    },
    {
      "shader_name": "ConvertRtoRGBA_70479bbb29d402826ba8cc764ebed13c58705ba0ce305e6e33dbc97e",
      "inputs": [
        {
          "variable_name": "Variable1545",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable239"
    },
    {
      "shader_name": "Tensordot_RGBA_da7ad27b12fbf9714c59a56566692d60390e4b812545164792b9762d",
      "inputs": [
        {
          "variable_name": "Variable239",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1024",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable244"
    },
    {
      "shader_name": "Tensordot_RGBA_b6266594004da0eeef40e796f7294fc8e5a4e75e4d60e23907db0b39",
      "inputs": [
        {
          "variable_name": "Variable1342",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable934",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable246"
    },
    {
      "shader_name": "ElementwiseAdd_9111bc4a3243d7c63d04701427d4ce944442da636b61db54bbf51cce",
      "inputs": [
        {
          "variable_name": "Variable246",
          "value": 0
        },
        {
          "variable_name": "Variable244",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable742"
    },
    {
      "shader_name": "ElementwiseAdd_54f0f2b6544327ee0d7a3ca26e466c6f1df233ff1c7a105a799eff86",
      "inputs": [
        {
          "variable_name": "Variable742",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable493",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable248"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable248",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1551"
    },
    {
      "shader_name": "ConvertRtoRGBA_1943bf25c0c528a949f09b19ea593274bc8b7bb340c49bf472603761",
      "inputs": [
        {
          "variable_name": "Variable1551",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable249"
    },
    {
      "shader_name": "Tensordot_RGBA_9301d9c31b1cc0c199e30cec3d6b2912d301e8fe57e181fb52b881cf",
      "inputs": [
        {
          "variable_name": "Variable249",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1026",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable252"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable252",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable195",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable253"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable253",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable254"
    },
    {
      "shader_name": "Im2Col_RGBA_2201d86abd0e1a6f7d66240bc6cc9270ef4b13ece637bfa2f13729a9",
      "inputs": [
        {
          "variable_name": "Variable254",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1349"
    },
    {
      "shader_name": "Tensordot_RGBA_a2e7cbfde592bd474e27cb1b7578dc2539700c6156c1f10072048abb",
      "inputs": [
        {
          "variable_name": "Variable1349",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable932",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable257"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable257",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable199",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable258"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable258",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1549"
    },
    {
      "shader_name": "ConvertRtoRGBA_70479bbb29d402826ba8cc764ebed13c58705ba0ce305e6e33dbc97e",
      "inputs": [
        {
          "variable_name": "Variable1549",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable259"
    },
    {
      "shader_name": "Tensordot_RGBA_da7ad27b12fbf9714c59a56566692d60390e4b812545164792b9762d",
      "inputs": [
        {
          "variable_name": "Variable259",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1028",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable262"
    },
    {
      "shader_name": "ElementwiseAdd_54e754030b256b04dfddc0c8d4b13138df07b63a2e6d2f9142eacffa",
      "inputs": [
        {
          "variable_name": "Variable262",
          "value": 0
        },
        {
          "variable_name": "Variable1551",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable744"
    },
    {
      "shader_name": "ElementwiseAdd_01d56ba214876888139bae202425db5fe92d3c7b0fb4d7a4a1e97d49",
      "inputs": [
        {
          "variable_name": "ConstantVariable203",
          "value": 0
        },
        {
          "variable_name": "Variable744",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable264"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable264",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1556"
    },
    {
      "shader_name": "ConvertRtoRGBA_1943bf25c0c528a949f09b19ea593274bc8b7bb340c49bf472603761",
      "inputs": [
        {
          "variable_name": "Variable1556",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable265"
    },
    {
      "shader_name": "Tensordot_RGBA_9301d9c31b1cc0c199e30cec3d6b2912d301e8fe57e181fb52b881cf",
      "inputs": [
        {
          "variable_name": "Variable265",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1030",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable268"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable268",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable207",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable269"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable269",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable270"
    },
    {
      "shader_name": "Im2Col_RGBA_2201d86abd0e1a6f7d66240bc6cc9270ef4b13ece637bfa2f13729a9",
      "inputs": [
        {
          "variable_name": "Variable270",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1359"
    },
    {
      "shader_name": "Tensordot_RGBA_a2e7cbfde592bd474e27cb1b7578dc2539700c6156c1f10072048abb",
      "inputs": [
        {
          "variable_name": "Variable1359",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable930",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable273"
    },
    {
      "shader_name": "ElementwiseAdd_aef55569a39f3e31c6ff4b7a76820e708fe7954bec690bfa04504ba9",
      "inputs": [
        {
          "variable_name": "Variable273",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable211",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable274"
    },
    {
      "shader_name": "Relu_520053d855ccb840fbbdbf359b4bb6163978195bd4e6505f14c00c1f",
      "inputs": [
        {
          "variable_name": "Variable274",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1554"
    },
    {
      "shader_name": "ConvertRtoRGBA_70479bbb29d402826ba8cc764ebed13c58705ba0ce305e6e33dbc97e",
      "inputs": [
        {
          "variable_name": "Variable1554",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable275"
    },
    {
      "shader_name": "Tensordot_RGBA_da7ad27b12fbf9714c59a56566692d60390e4b812545164792b9762d",
      "inputs": [
        {
          "variable_name": "Variable275",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable1032",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable278"
    },
    {
      "shader_name": "ElementwiseAdd_54e754030b256b04dfddc0c8d4b13138df07b63a2e6d2f9142eacffa",
      "inputs": [
        {
          "variable_name": "Variable278",
          "value": 0
        },
        {
          "variable_name": "Variable1556",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable745"
    },
    {
      "shader_name": "ElementwiseAdd_01d56ba214876888139bae202425db5fe92d3c7b0fb4d7a4a1e97d49",
      "inputs": [
        {
          "variable_name": "ConstantVariable215",
          "value": 0
        },
        {
          "variable_name": "Variable745",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable280"
    },
    {
      "shader_name": "Relu_45bf6de9e66a1359aadda5093fc7ad64ab4580c56320c8c54ff0842c",
      "inputs": [
        {
          "variable_name": "Variable280",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable281"
    },
    {
      "shader_name": "AveragePooling2D_36d8924dbef525be019de4c6222ae54070dc341b418bac68d6ef5aa2",
      "inputs": [
        {
          "variable_name": "Variable281",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable282"
    },
    {
      "shader_name": "Reshape_c48a15e6c0d38213687576c0d7f2a26f5a3189ae65b3a581c11bafb8",
      "inputs": [
        {
          "variable_name": "Variable282",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1557"
    },
    {
      "shader_name": "ConvertRtoRGBA_ce6cdc6c6849b6259ec3aaea68cda34007a51ef88f7bd9bb67f576cd",
      "inputs": [
        {
          "variable_name": "Variable1557",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable283"
    },
    {
      "shader_name": "Tensordot_RGBA_f9aaa084a7c7e24f67165ba79238a1fdd70f51799fac9dd23244e1a1",
      "inputs": [
        {
          "variable_name": "Variable283",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable823",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable284"
    },
    {
      "shader_name": "ElementwiseAdd_256e40f348bbdbf01cf9f5bcd445855220f896d5d5b25f406cbd9acc",
      "inputs": [
        {
          "variable_name": "Variable284",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable217",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable285"
    },
    {
      "shader_name": "Max_885c4b8c86b77a1b300d120e377b19a432f3e4a3a43d300d03aaf7f0",
      "inputs": [
        {
          "variable_name": "Variable285",
          "value": 0
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1365"
    },
    {
      "shader_name": "ScalarMul_84dc71782759eeab96325a189104a217e74a5af0cca324721b1ae6a2",
      "inputs": [
        {
          "variable_name": "Variable1365",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1366"
    },
    {
      "shader_name": "ElementwiseAdd_ea228ba591aabb7ef001c629b2ecfe26cbdf5bda2c9e3c1fcebeb960",
      "inputs": [
        {
          "variable_name": "Variable285",
          "value": 0
        },
        {
          "variable_name": "Variable1366",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1367"
    },
    {
      "shader_name": "Exp_c866ca567df66a01ff9f147487704a97a59dea34bfeb9d30cee61ecf",
      "inputs": [
        {
          "variable_name": "Variable1367",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1368"
    },
    {
      "shader_name": "Sum_1d32fe42bc9fef2ac9967cc69f2ee13fc30daf2a6830f32a7611e006",
      "inputs": [
        {
          "variable_name": "Variable1368",
          "value": 0
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1369"
    },
    {
      "shader_name": "ElementwiseDiv_1a0de457d521914217c86e122a9badb7edfef6941e7ac9e9c00070d0",
      "inputs": [
        {
          "variable_name": "Variable1368",
          "value": 0
        },
        {
          "variable_name": "Variable1369",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable286"
    }
  ],
  "constants_map": {
    "ConstantVariable840": {
      "byte_offset": 0,
      "size": 9408
    },
    "ConstantVariable841": {
      "byte_offset": 37632,
      "size": 9408
    },
    "ConstantVariable6": {
      "byte_offset": 75264,
      "size": 64
    },
    "ConstantVariable501": {
      "byte_offset": 75520,
      "size": 64
    },
    "ConstantVariable962": {
      "byte_offset": 75776,
      "size": 4096
    },
    "ConstantVariable11": {
      "byte_offset": 92160,
      "size": 64
    },
    "ConstantVariable964": {
      "byte_offset": 92416,
      "size": 36864
    },
    "ConstantVariable15": {
      "byte_offset": 239872,
      "size": 64
    },
    "ConstantVariable966": {
      "byte_offset": 240128,
      "size": 16384
    },
    "ConstantVariable968": {
      "byte_offset": 305664,
      "size": 16384
    },
    "ConstantVariable499": {
      "byte_offset": 371200,
      "size": 256
    },
    "ConstantVariable970": {
      "byte_offset": 372224,
      "size": 16384
    },
    "ConstantVariable27": {
      "byte_offset": 437760,
      "size": 64
    },
    "ConstantVariable960": {
      "byte_offset": 438016,
      "size": 36864
    },
    "ConstantVariable31": {
      "byte_offset": 585472,
      "size": 64
    },
    "ConstantVariable972": {
      "byte_offset": 585728,
      "size": 16384
    },
    "ConstantVariable35": {
      "byte_offset": 651264,
      "size": 256
    },
    "ConstantVariable974": {
      "byte_offset": 652288,
      "size": 16384
    },
    "ConstantVariable39": {
      "byte_offset": 717824,
      "size": 64
    },
    "ConstantVariable958": {
      "byte_offset": 718080,
      "size": 36864
    },
    "ConstantVariable43": {
      "byte_offset": 865536,
      "size": 64
    },
    "ConstantVariable976": {
      "byte_offset": 865792,
      "size": 16384
    },
    "ConstantVariable47": {
      "byte_offset": 931328,
      "size": 256
    },
    "ConstantVariable978": {
      "byte_offset": 932352,
      "size": 32768
    },
    "ConstantVariable51": {
      "byte_offset": 1063424,
      "size": 128
    },
    "ConstantVariable980": {
      "byte_offset": 1063936,
      "size": 147456
    },
    "ConstantVariable55": {
      "byte_offset": 1653760,
      "size": 128
    },
    "ConstantVariable982": {
      "byte_offset": 1654272,
      "size": 65536
    },
    "ConstantVariable956": {
      "byte_offset": 1916416,
      "size": 131072
    },
    "ConstantVariable497": {
      "byte_offset": 2440704,
      "size": 512
    },
    "ConstantVariable984": {
      "byte_offset": 2442752,
      "size": 65536
    },
    "ConstantVariable67": {
      "byte_offset": 2704896,
      "size": 128
    },
    "ConstantVariable954": {
      "byte_offset": 2705408,
      "size": 147456
    },
    "ConstantVariable71": {
      "byte_offset": 3295232,
      "size": 128
    },
    "ConstantVariable986": {
      "byte_offset": 3295744,
      "size": 65536
    },
    "ConstantVariable75": {
      "byte_offset": 3557888,
      "size": 512
    },
    "ConstantVariable988": {
      "byte_offset": 3559936,
      "size": 65536
    },
    "ConstantVariable79": {
      "byte_offset": 3822080,
      "size": 128
    },
    "ConstantVariable990": {
      "byte_offset": 3822592,
      "size": 147456
    },
    "ConstantVariable83": {
      "byte_offset": 4412416,
      "size": 128
    },
    "ConstantVariable992": {
      "byte_offset": 4412928,
      "size": 65536
    },
    "ConstantVariable87": {
      "byte_offset": 4675072,
      "size": 512
    },
    "ConstantVariable952": {
      "byte_offset": 4677120,
      "size": 65536
    },
    "ConstantVariable91": {
      "byte_offset": 4939264,
      "size": 128
    },
    "ConstantVariable950": {
      "byte_offset": 4939776,
      "size": 147456
    },
    "ConstantVariable95": {
      "byte_offset": 5529600,
      "size": 128
    },
    "ConstantVariable948": {
      "byte_offset": 5530112,
      "size": 65536
    },
    "ConstantVariable99": {
      "byte_offset": 5792256,
      "size": 512
    },
    "ConstantVariable994": {
      "byte_offset": 5794304,
      "size": 131072
    },
    "ConstantVariable103": {
      "byte_offset": 6318592,
      "size": 256
    },
    "ConstantVariable996": {
      "byte_offset": 6319616,
      "size": 589824
    },
    "ConstantVariable107": {
      "byte_offset": 8678912,
      "size": 256
    },
    "ConstantVariable998": {
      "byte_offset": 8679936,
      "size": 262144
    },
    "ConstantVariable946": {
      "byte_offset": 9728512,
      "size": 524288
    },
    "ConstantVariable495": {
      "byte_offset": 11825664,
      "size": 1024
    },
    "ConstantVariable1000": {
      "byte_offset": 11829760,
      "size": 262144
    },
    "ConstantVariable119": {
      "byte_offset": 12878336,
      "size": 256
    },
    "ConstantVariable944": {
      "byte_offset": 12879360,
      "size": 589824
    },
    "ConstantVariable123": {
      "byte_offset": 15238656,
      "size": 256
    },
    "ConstantVariable1002": {
      "byte_offset": 15239680,
      "size": 262144
    },
    "ConstantVariable127": {
      "byte_offset": 16288256,
      "size": 1024
    },
    "ConstantVariable1004": {
      "byte_offset": 16292352,
      "size": 262144
    },
    "ConstantVariable131": {
      "byte_offset": 17340928,
      "size": 256
    },
    "ConstantVariable942": {
      "byte_offset": 17341952,
      "size": 589824
    },
    "ConstantVariable135": {
      "byte_offset": 19701248,
      "size": 256
    },
    "ConstantVariable1006": {
      "byte_offset": 19702272,
      "size": 262144
    },
    "ConstantVariable139": {
      "byte_offset": 20750848,
      "size": 1024
    },
    "ConstantVariable1008": {
      "byte_offset": 20754944,
      "size": 262144
    },
    "ConstantVariable143": {
      "byte_offset": 21803520,
      "size": 256
    },
    "ConstantVariable940": {
      "byte_offset": 21804544,
      "size": 589824
    },
    "ConstantVariable147": {
      "byte_offset": 24163840,
      "size": 256
    },
    "ConstantVariable1010": {
      "byte_offset": 24164864,
      "size": 262144
    },
    "ConstantVariable151": {
      "byte_offset": 25213440,
      "size": 1024
    },
    "ConstantVariable1012": {
      "byte_offset": 25217536,
      "size": 262144
    },
    "ConstantVariable155": {
      "byte_offset": 26266112,
      "size": 256
    },
    "ConstantVariable938": {
      "byte_offset": 26267136,
      "size": 589824
    },
    "ConstantVariable159": {
      "byte_offset": 28626432,
      "size": 256
    },
    "ConstantVariable1014": {
      "byte_offset": 28627456,
      "size": 262144
    },
    "ConstantVariable163": {
      "byte_offset": 29676032,
      "size": 1024
    },
    "ConstantVariable1016": {
      "byte_offset": 29680128,
      "size": 262144
    },
    "ConstantVariable167": {
      "byte_offset": 30728704,
      "size": 256
    },
    "ConstantVariable936": {
      "byte_offset": 30729728,
      "size": 589824
    },
    "ConstantVariable171": {
      "byte_offset": 33089024,
      "size": 256
    },
    "ConstantVariable1018": {
      "byte_offset": 33090048,
      "size": 262144
    },
    "ConstantVariable175": {
      "byte_offset": 34138624,
      "size": 1024
    },
    "ConstantVariable1020": {
      "byte_offset": 34142720,
      "size": 524288
    },
    "ConstantVariable179": {
      "byte_offset": 36239872,
      "size": 512
    },
    "ConstantVariable1022": {
      "byte_offset": 36241920,
      "size": 2359296
    },
    "ConstantVariable183": {
      "byte_offset": 45679104,
      "size": 512
    },
    "ConstantVariable1024": {
      "byte_offset": 45681152,
      "size": 1048576
    },
    "ConstantVariable934": {
      "byte_offset": 49875456,
      "size": 2097152
    },
    "ConstantVariable493": {
      "byte_offset": 58264064,
      "size": 2048
    },
    "ConstantVariable1026": {
      "byte_offset": 58272256,
      "size": 1048576
    },
    "ConstantVariable195": {
      "byte_offset": 62466560,
      "size": 512
    },
    "ConstantVariable932": {
      "byte_offset": 62468608,
      "size": 2359296
    },
    "ConstantVariable199": {
      "byte_offset": 71905792,
      "size": 512
    },
    "ConstantVariable1028": {
      "byte_offset": 71907840,
      "size": 1048576
    },
    "ConstantVariable203": {
      "byte_offset": 76102144,
      "size": 2048
    },
    "ConstantVariable1030": {
      "byte_offset": 76110336,
      "size": 1048576
    },
    "ConstantVariable207": {
      "byte_offset": 80304640,
      "size": 512
    },
    "ConstantVariable930": {
      "byte_offset": 80306688,
      "size": 2359296
    },
    "ConstantVariable211": {
      "byte_offset": 89743872,
      "size": 512
    },
    "ConstantVariable1032": {
      "byte_offset": 89745920,
      "size": 1048576
    },
    "ConstantVariable215": {
      "byte_offset": 93940224,
      "size": 2048
    },
    "ConstantVariable823": {
      "byte_offset": 93948416,
      "size": 2048000
    },
    "ConstantVariable217": {
      "byte_offset": 102140416,
      "size": 1000
    }
  },
  "licenses": {
    "webdnn": "(C) Machine Intelligence Laboratory (The University of Tokyo), MIT License"
  }
}